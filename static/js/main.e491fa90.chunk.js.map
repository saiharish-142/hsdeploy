{"version":3,"sources":["assets/images/licencepic.jpg","components/gMaps.js","services/api.js","store/Hospitals.js","store/Drivers.js","store/ActiveRides.js","store/PastRides.js","store/Patient.js","components/input.js","components/patientDetailForm.js","components/headerComponent.js","components/indexMap.js","components/homeLocation.js","components/loading.js","services/authService.js","screens/HomeScreen.js","components/activeRidesList.js","components/rideDetail.js","screens/ActiveRidesScreen.js","components/hospitalDetails.js","components/driversList.js","components/patientTable.js","components/driverform.js","components/driverrequest/Driverrequest.js","screens/ProfileScreen.js","components/footerComponent.js","components/loginForm.js","screens/LoginScreen.js","components/registerUserForm.js","screens/RegisterScreen.js","components/logout.js","screens/NotFound.js","screens/AdminPanel.js","App.js","serviceWorker.js","index.js","store/configureStore.js","assets/images/usermarkersvg.svg","assets/images/hospital.JPG","assets/images/hostrack.JPG","assets/images/hoslogin.JPG","assets/images/userabout.JPG","assets/images/Profile.png","assets/images/ambulancessvg.svg","assets/images/hospitalmarkersvg.svg","assets/images/hospitalpic.jpg","assets/images/connecting.JPG"],"names":["module","exports","map","infoWindow","markers","baseURL","get","url","axios","method","headers","localStorage","getItem","post","data","initialState","hospitalDetails","isLoading","loginErrMsg","regErrMsg","regSuccess","currentUser","loginToHospitalStart","type","loginToHospitalFailed","errmess","payload","loginToHospitalSuccess","drivers","registerHospitalSuccess","registerHospitalFailed","setCurrentUser","HospitalReducer","state","action","driverDetails","driverInfo","singledrivertotaldetails","totaldriverdetails","errMsg","successMsg","isSuccess","updateDriverInfo","driverId","fetchDrivers","hospitalId","dispatch","fetchDriversStart","Api","then","fetchDriversSuccess","_id","catch","ex","fetchDriversFailed","response","addDriverDataStart","addDriverDataFailed","addDriverDataSuccess","driverlist","DriverReducer","find","dr","drivertotaldetails","name","rideDetails","rides","updateActiveRideDetails","id","fetchActiveRidesStart","fetchActiveRidesFailed","fetchActiveRidesSuccess","activeRides","ActiveRidesReducer","ride","updatePastRideDetails","fetchPastRidesStart","fetchPastRidesFailed","fetchPastRidesSuccess","pastRides","PastRidesReducer","userData","addPatientDataStart","addPatientDataFailed","addPatientDataSuccess","mess","PatientReducer","Input","value","onChange","placeholder","label","otherProps","className","htmlFor","fu","PatientDetailForm","onSubmit","patientDetail","onChangeInput","driverList","gurdnumber","searchedUser","setlocationuser","useState","users","setusers","foundusers","setfoundusers","useEffect","fetch","res","json","results","console","log","required","age","patientCase","casePrior","patientNo","guardianNo","e","val","i","length","phoneNumber","indexOf","push","se","target","style","maxHeight","overflow","user","key","color","height","cursor","onClick","pickedBy","driver","to","Header","isOpen","setIsOpen","useSelector","hospital","JSON","parse","data-toggle","data-target","aria-controls","aria-expanded","aria-label","userType","src","profile","alt","GMap","usersocket","driversocket","dmarker","umarker","props","renderMap","index","window","document","getElementsByTagName","script","createElement","async","defer","parentNode","insertBefore","loadScript","initMap","google","maps","Map","getElementById","center","lat","lng","zoom","InfoWindow","Marker","draggable","icon","usermarkersvg","position","coord","setCenter","input","searchBox","places","SearchBox","addListener","setBounds","getBounds","getPlaces","bounds","LatLngBounds","forEach","place","geometry","Size","Point","viewport","union","extend","location","setPosition","lpos","setState","reverseGeo","fitBounds","setZoom","event","npos","getPosition","LAT","LNG","setUserLocation","prev","area","address_components","long_name","landmark","landmarkStreet","cityState","err","warn","message","previous","pickUplocation","this","mpos","coordinates","handleLocationError","browserHasGeolocation","pos","setContent","open","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","getCenter","mapvh","mapvw","textAlign","myLocation","width","Component","HomeLocation","userLocation","setPatientDetails","Loading","role","logout","removeItem","jwt","jwtDecode","error","class","title","desc","hoshowData","Home","history","useHistory","setsearchedUsers","patientDetails","driverLoading","useDispatch","auth","handleChangeGN","num","a","currentTarget","preventDefault","item","hoslogin","user1","user2","userabout","for","decodePolyline","require","IndexMap","initpolyline","setinitpolyline","setride","polyline","midware","driverLocation","setDriverLocation","io","connect","emit","roomid","on","locationuser","locationdriver","opos","upos","setMap","ambulancesvg","convrter","initMap1","pol","pathCoordinates","pathlength","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","hospitalmarkersvg","ActiveRidesList","list","cx","cy","r","strokeWidth","fill","signalColor","RideDetail","mobileNo","pcase","address","ActiveRides","activeRidesLoading","patientId","HospitalDetails","hospitalImage","code","numberOfDrivers","subType","reqUsed","subExpiry","rating","DriversList","PatientTable","minWidth","patient","timestamp","x","Date","getHours","getMinutes","getDate","getMonth","getFullYear","DateTime","createdAt","Driverform","contact","ambulanceno","licenseno","uniquecode","submittedby","licensepic","driverpic","driverformdetails","setdriverformdetails","handleChange","Driverrequest","Profile","profiletable","setprofiletable","requesttable","setrequesttable","adddrivertable","setadddrivertable","pastRideLoading","registeredDrivers","patientData","driverL","borderRadius","Footer","href","rel","LoginForm","email","password","Login","setUser","loginData","setItem","token","stringify","hospitalNumbers","Register","hospitalLocation","registerUser","setRegisterUser","regData","connecting","Logout","NotFound","AdminPanel","userd","setdrivers","penddrivers","setpenddrivers","hospi","sethospi","result","paddingBottom","Paper","margin","fontWeight","Table","TableHead","TableRow","TableCell","align","TableBody","body","da","filter","resu","pad","App","useLocation","pathname","hos","exact","render","component","Boolean","hostname","match","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e491fa90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/licencepic.ac9b5bf9.jpg\";","import React, { Component } from \"react\";\nimport Input from \"./input\"; \nimport usermarkersvg from \"../assets/images/usermarkersvg.svg\"\n //import { ReverseGeo } from \"./reverseGeo\";\n//import \"./App.css\";\n//import maptheme from \"./maptheme\";\n/*\n//decoder for the string that we get from app so that we can decode the string and convert into array of lat,lng\nconst decodePolyline = require(\"decode-google-map-polyline\");\nvar polyline2 =\n  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\";\nvar pathCoordinates = decodePolyline(polyline2);\n*/\nlet map, infoWindow,markers,mpos;\n//class starts\n\nclass GMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coord: {\n        lat: null,\n        lng: null,\n      }\n     \n    };\n  }\n\n  componentDidUpdate(previous){\n  //  console.log(previous)\n  if(previous.patientDetail.pickUplocation !== this.props.patientDetail.pickUplocation){\n    this.renderMap();\n    const mpos ={\n      lat : this.props.patientDetail.pickUplocation.coordinates[0],\n      lng : this.props.patientDetail.pickUplocation.coordinates[1],\n    }\n \n    this.setState({coord : mpos},()=>{\n      if(this.state.coord.lat && this.state.coord.lng){\n      \n        this.reverseGeo()\n       \n    }})\n    \n  \n    console.log(mpos,\"update\")\n  }\n \n  }\n  componentDidMount() {\n    this.renderMap();\n    const mpos ={\n      lat : this.props.patientDetail.pickUplocation.coordinates[0],\n      lng : this.props.patientDetail.pickUplocation.coordinates[1],\n    }\n  \n    this.setState({coord : mpos})\n  \n    console.log(mpos,\"mount\")\n   \n  }\n\n  renderMap = () => {\n    loadScript(\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyATwnp3e3ZL7__Oskpdo8Gutgls6ir4FeU&libraries=places&callback=initMap\"\n    );\n    window.initMap = this.initMap;\n  };\n  // api AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\n  \n  //own AIzaSyATwnp3e3ZL7__Oskpdo8Gutgls6ir4FeU\n\n  //initialization of maps\n  initMap = () => {\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: 25.27794, lng: 83.00244 },\n      zoom: 15,\n    });\n\n    //get user location see below image1 we get the data like\n    infoWindow = new window.google.maps.InfoWindow(); // Try HTML5 geolocation.\n  //marker \n\nmarkers = new window.google.maps.Marker({\n  map,\ndraggable:true,\nicon: usermarkersvg,\n  position: this.state.coord\n})\nmap.setCenter(this.state.coord)\n\n\n\n//markers.setPosition(mpos)\n       //search bar start\n\n       const input = document.getElementById(\"mapsearch\");\n      if(input){\n             const searchBox = new window.google.maps.places.SearchBox(input);\n       // map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(input);\n       // Bias the SearchBox results towards current map's viewport.\n       map.addListener(\"bounds_changed\", () => {\n         searchBox.setBounds(map.getBounds());\n       });\n   //    let markers = [];\n       // Listen for the event fired when the user selects a prediction and retrieve\n       // more details for that place.\n       searchBox.addListener(\"places_changed\", () => {\n         const places = searchBox.getPlaces();\n   \n         if (places.length == 0) {\n           return;\n         }\n    /*    // Clear out the old markers.       //clar\n         markers.forEach((marker) => {\n           marker.setMap(null);\n         });\n         markers = []; */\n         \n         // For each place, get the icon, name and location.\n         const bounds = new window.google.maps.LatLngBounds();\n         places.forEach((place) => {\n           if (!place.geometry) {\n             console.log(\"Returned place contains no geometry\");\n             return;\n           }\n           const icon = {\n             url: place.icon,\n             size: new window.google.maps.Size(71, 71),\n             origin: new window.google.maps.Point(0, 0),\n             anchor: new window.google.maps.Point(17, 34),\n             scaledSize: new window.google.maps.Size(25, 25),\n           };\n           // Create a marker for each place.\n          \n     /*     markers.push(       ///clear\n            new window.google.maps.Marker({\n              map,\n              icon,\n              title: place.name,\n              draggable :true,\n              position: place.geometry.location,\n            })\n          ); */\n           if (place.geometry.viewport) {\n             // Only geocodes have viewport.\n             bounds.union(place.geometry.viewport);\n           } else {\n             bounds.extend(place.geometry.location);\n            \n           }\n           \n           markers.setPosition( place.geometry.location)\n           map.setCenter(place.geometry.location)\n\n           var lpos ={\n            lat : place.geometry.location.lat(),\n           lng : place.geometry.location.lng()\n      }\n\n           this.setState({coord : lpos},()=>{\n            this.reverseGeo()\n            map.setCenter(lpos)\n          })\n          \n         });\n         map.fitBounds(bounds);\n         map.setZoom(12);\n       \n\n       });\n       //searchbox end\n      } \n     //geocoding\n\n    const geocode= new window.google.maps.event.addListener(markers,\"dragend\",(event)=>{\n      console.log(\"iam dragged\");\n      var lat,lng;\nvar npos ={\n      lat : markers.getPosition().lat(),\n     lng : markers.getPosition().lng()\n}\n    this.setState({coord : npos},()=>{\n      this.reverseGeo()\n      map.setCenter(npos)\n    })\n  // console.log(this.state.coord.lat) \n  })\n\n  };\n\n\n  reverseGeo = () => {\n    const KEY = \"AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\";\n    const LAT = this.state.coord.lat;\n    const LNG = this.state.coord.lng;\n    let url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${LAT},${LNG}&key=${KEY}`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        this.props.setUserLocation((prev) => ({\n          ...prev,\n          area: data.results[0].address_components[0].long_name ? data.results[0].address_components[0].long_name : \"\",\n          landmark: data.results[0].address_components[1].long_name ? data.results[0].address_components[1].long_name : \"\",\n          landmarkStreet: data.results[0].address_components[2].long_name ? data.results[0].address_components[2].long_name: \"\",\n          cityState: `${data.results[0].address_components[3] ? data.results[0].address_components[3].long_name : \"\"}, ${data.results[0].address_components[4] ? data.results[0].address_components[4].long_name : \"\"}`,\n        }));\n      })\n      .catch((err) => {\n        console.warn(err.message);\n      });\n  };\n\n\n\nasync myLocation(e){\n // console.log(\"iam clicked\")\n   \n  const handleLocationError = (browserHasGeolocation, infoWindow, pos) => {\n    infoWindow.setPosition(pos);\n    infoWindow.setContent(\n      browserHasGeolocation\n        ? \"Error: The Geolocation service failed.\"\n        : \"Error: Your browser doesn't support geolocation.\"\n    );\n    infoWindow.open(map);\n  };\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n        //console.log(position);\n        this.setState({ coord: pos }, () => {\n          //ReverseGeo(this.state.coord.lat, this.state.coord.lng);\n          this.reverseGeo();\n        });\n      //  infoWindow.setPosition(pos);\n        markers.setPosition(pos)\n      //  infoWindow.setContent(\"Location found.\");\n        infoWindow.open(map);\n        map.setCenter(pos);\n      \n      },\n  \n \n      () => {\n        handleLocationError(true, infoWindow, map.getCenter());\n      }\n    );\n  } else {\n    // Browser doesn't support Geolocation\n    handleLocationError(false, infoWindow, map.getCenter());\n  } \n \n  }\n  // end reverse geocoding\n  render() {\n    const { mapvh, mapvw } = this.props;\n//console.log(this.props.patientDetail.pickUplocation.coordinates[0])\n\n    return (\n      <main>\n         <div className=\"row\">\n          <div className=\"col-md-12 col-lg-9 pr-0\">\n            <Input\n            id =\"mapsearch\"\n              name=\"nearByHospital\"\n              placeholder=\"Search\"\n              //value=\"nearByHospital\"\n              type=\"text\"\n              style={{ textAlign: \"center\" }}\n            />\n          </div>\n          <div className=\"col-md-12 col-lg-3\">\n            <button onClick={(e)=>this.myLocation()} type=\"submit\" className=\"button myLocationBtn\">\n              My Location\n            </button>\n          </div>\n        </div>\n        <div style={{ width: mapvw, height: mapvh }} id=\"map\"></div>\n      </main>\n    );\n  }\n}\nfunction loadScript(url) {\n  var index = window.document.getElementsByTagName(\"script\")[0];\n  var script = window.document.createElement(\"script\");\n  script.src = url;\n  script.async = true;\n  script.defer = true;\n  index.parentNode.insertBefore(script, index);\n}\n\nexport default GMap;\n","import axios from \"axios\";\n\nconst baseURL = \"https://serverprioritypulse.herokuapp.com\";\n\nexport const get = (url) =>\n  axios({\n    method: \"get\",\n    baseURL,\n    url,\n    headers: {\n      \"content-type\": \"application/json\",\n      \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\n    },\n  });\n\nexport const post = (url, data) =>\n  axios({\n    method: \"post\",\n    baseURL,\n    url,\n    headers: {\n      \"content-type\": \"application/json\",\n      \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\n    },\n    data,\n  });\n","import * as Api from \"../services/api\";\n\nconst initialState = {\n  hospitalDetails: {},\n  isLoading: false,\n  loginErrMsg: null,\n  regErrMsg: null,\n  regSuccess: false,\n  currentUser: false,\n};\n\n// ACTION TYPES\nconst SET_CURRENTUSER = \"SET_CURRENTUSER\";\n\nconst LOGIN_HOSPITAL_BEGAN = \"LOGIN_HOSPITAL_BEGAN\";\nconst LOGIN_HOSPITAL_FAILED = \"LOGIN_HOSPITAL_FAILED\";\nconst LOGIN_HOSPITAL_SUCCESS = \"LOGIN_HOSPITAL_SUCCESS\";\n\nconst REGISTER_HOSPITAL_FAILED = \"REGISTER_HOSPITAL_FAILED\";\nconst REGISTER_HOSPITAL_SUCCESS = \"REGISTER_HOSPITAL_SUCCESS\";\n\n// ACTION CREATORS\nexport const getLoggedByJWT = (hospitalId) => (dispatch) => {\n  dispatch(loginToHospitalStart());\n  Api.get(\"/hospital/\")\n    .then((response) => {\n      dispatch(\n        loginToHospitalSuccess(\n          response.data.find((hos) => hos._id === hospitalId)\n        )\n      );\n      dispatch(setCurrentUser(true));\n    })\n    .catch((ex) => {\n      dispatch(loginToHospitalFailed(ex.response.data.error));\n    });\n};\n\nexport const loginToHospital = (loginData) => (dispatch) => {\n  dispatch(loginToHospitalStart());\n  Api.post(\"/auth/hospisignin\", loginData)\n    .then((response) => {\n      dispatch(loginToHospitalSuccess(response.data.hospital));\n      localStorage.setItem(\"token\", response.data.token);\n      console.log(response.data)\n      localStorage.setItem(\"hospital\", JSON.stringify(response.data.hospital));\n      dispatch(setCurrentUser(true));\n      window.location = \"/\";\n    })\n    .catch((ex) => {\n      dispatch(loginToHospitalFailed(ex.response.data.error));\n    });\n};\n\nexport const loginToHospitalStart = () => ({\n  type: LOGIN_HOSPITAL_BEGAN,\n});\n\nexport const loginToHospitalFailed = (errmess) => ({\n  type: LOGIN_HOSPITAL_FAILED,\n  payload: errmess,\n});\n\nexport const loginToHospitalSuccess = (drivers) => ({\n  type: LOGIN_HOSPITAL_SUCCESS,\n  payload: drivers,\n});\n\nexport const registerHospital = (regData) => (dispatch) => {\n  Api.post(\"/hospital/signup\", regData)\n    .then((response) => {\n      dispatch(registerHospitalSuccess());\n      window.location = \"/\";\n    })\n    .catch((ex) => {\n      dispatch(registerHospitalFailed(ex.response.data.error));\n    });\n};\n\nexport const registerHospitalSuccess = () => ({\n  type: REGISTER_HOSPITAL_SUCCESS,\n});\n\nexport const registerHospitalFailed = (errmess) => ({\n  type: REGISTER_HOSPITAL_FAILED,\n  payload: errmess,\n});\n\nexport const setCurrentUser = (currentUser) => ({\n  type: SET_CURRENTUSER,\n  payload: currentUser,\n});\n\n// REDUCER\nconst HospitalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_HOSPITAL_BEGAN:\n      return {\n        ...state,\n        isLoading: true,\n        loginErrMsg: null,\n        regSuccess: false,\n      };\n    case LOGIN_HOSPITAL_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        loginErrMsg: null,\n        hospitalDetails: action.payload,\n      };\n    case LOGIN_HOSPITAL_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        loginErrMsg: action.payload,\n      };\n    case REGISTER_HOSPITAL_SUCCESS:\n      return {\n        ...state,\n        regErrMsg: null,\n        regSuccess: true,\n      };\n    case REGISTER_HOSPITAL_FAILED:\n      return {\n        ...state,\n        regErrMsg: action.payload,\n        regSuccess: false,\n      };\n    case SET_CURRENTUSER:\n      return {\n        ...state,\n        currentUser: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default HospitalReducer;\n\n//SELECTOR\n\nexport const getHospitalId = (state) => state.hospitalDetails._id;\n","import * as Api from \"../services/api\";\n\nconst initialState = {\n  driverDetails: [],\n  driverInfo: {},\n  isLoading: false,\n  singledrivertotaldetails:[],\n  totaldriverdetails:[],\n  errMsg: null,\n  successMsg: null,\n  isSuccess: false,\n};\n\n// ACTION TYPES\nconst UPDATE_DRIVERINFO = \"UPDATE_DRIVERINFO\";\nconst UPDATE_DRIVERTOTALDETAILS = \"UPDATE_DRIVERTOTALDETAILS\"\n\nconst GET_DRIVERS_BEGAN = \"GET_DRIVERS_BEGAN\";\nconst GET_DRIVERS_FAILED = \"GET_DRIVERS_FAILED\";\nconst GET_DRIVERS_SUCCESS = \"GET_DRIVERS_SUCCESS\";\n\nconst POST_DRIVERDATA_BEGAN = \"POST_DRIVERDATA_BEGAN\";\nconst POST_DRIVERDATA_FAILED = \"POST_DRIVERDATA_FAILED\";\nconst POST_DRIVERDATA_SUCCESS = \"POST_DRIVERDATA_SUCCESS\";\n\n// ACTION CREATORS\n\nexport const updateDriverInfo = (driverId) => ({\n  type: UPDATE_DRIVERINFO,\n  payload: driverId,\n});\n\nexport const updateDrivertotaldetails = (id) => ({\n  type: UPDATE_DRIVERTOTALDETAILS,\n  payload: id,\n});\n\nexport const fetchDrivers = (hospitalId) => (dispatch) => {\n  dispatch(fetchDriversStart());\n  Api.get(`/hospital/Hdrivers/${hospitalId}`)\n    .then((data) => {\n      dispatch(fetchDriversSuccess(data.data));\n      dispatch(updateDriverInfo(data.data[0]._id));\n    })\n    .catch((ex) => dispatch(fetchDriversFailed(ex.response.data)));\n};\n\nexport const fetchDriversStart = () => ({\n  type: GET_DRIVERS_BEGAN,\n});\n\nexport const fetchDriversFailed = (errmess) => ({\n  type: GET_DRIVERS_FAILED,\n  payload: errmess,\n});\n\nexport const fetchDriversSuccess = (drivers) => ({\n  type: GET_DRIVERS_SUCCESS,\n  payload: drivers,\n});\n\n//add driver details\nexport const addDriverData = (data) => (dispatch) => {\n  dispatch(addDriverDataStart());\n  Api.post(\"/driver/add\", data)\n    .then((response) => {\n      dispatch(addDriverDataSuccess(response.data.message));\n      console.log(response.data);\n    })\n    .catch((ex) => dispatch(addDriverDataFailed(ex.response.data.error)));\n};\n\nexport const addDriverDataStart = () => ({\n  type: POST_DRIVERDATA_BEGAN,\n});\n\nexport const addDriverDataFailed = (errmess) => ({\n  type: POST_DRIVERDATA_FAILED,\n  payload: errmess,\n});\n\nexport const addDriverDataSuccess = (driverlist) => ({\n  type: POST_DRIVERDATA_SUCCESS,\n  payload: driverlist,\n});\n\n// REDUCER\nconst DriverReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_DRIVERINFO:\n      return {\n        ...state,\n        driverInfo: state.driverDetails.find((dr) => dr._id === action.payload),\n      };\n    case UPDATE_DRIVERTOTALDETAILS:\n      return{\n        ...state,\n        drivertotaldetails: state.singledrivertotaldetails.find((dr)=>dr.name === action.payload)\n      }\n    case GET_DRIVERS_BEGAN:\n      return {\n        ...state,\n        isLoading: true,\n        errMsg: null,\n      };\n    case GET_DRIVERS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: null,\n        driverDetails: action.payload,\n      };\n    case GET_DRIVERS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: action.payload,\n      };\n\n      case POST_DRIVERDATA_BEGAN:\n        return {\n          ...state,\n          isLoading: true,\n          errMsg: null,\n          isSuccess: false,\n        };\n      case POST_DRIVERDATA_SUCCESS:\n        return {\n          ...state,\n          isLoading: false,\n          errMsg: null,\n          isSuccess: true,\n          successMsg: action.payload,\n        };\n      case POST_DRIVERDATA_FAILED:\n        return {\n          ...state,\n          isLoading: false,\n          errMsg: action.payload,\n          isSuccess: false,\n        };\n\n    default:\n      return state;\n  }\n};\nexport default DriverReducer;\n","import * as Api from \"../services/api\";\n\nconst initialState = {\n  rideDetails: {},\n  rides: [],\n  isLoading: false,\n  errMsg: null,\n};\n\n// ACTION TYPES\nconst UPDATE_ACTIVERIDEDETAILS = \"UPDATE_ACTIVERIDEDETAILS\";\n\nconst GET_ACTIVERIDES_BEGAN = \"GET_ACTIVERIDES_BEGAN\";\nconst GET_ACTIVERIDES_FAILED = \"GET_ACTIVERIDES_FAILED\";\nconst GET_ACTIVERIDES_SUCCESS = \"GET_ACTIVERIDES_SUCCESS\";\n\n// ACTION CREATORS\nexport const updateActiveRideDetails = (id) => ({\n  type: UPDATE_ACTIVERIDEDETAILS,\n  payload: id,\n});\n\nexport const fetchActiveRides = (hospitalId) => (dispatch) => {\n  dispatch(fetchActiveRidesStart());\n  Api.get(`hospital/activerides/${hospitalId}`)\n    .then((data) => {\n      dispatch(fetchActiveRidesSuccess(data.data));\n      dispatch(updateActiveRideDetails(data.data[0]._id));\n    })\n    .catch((err) => dispatch(fetchActiveRidesFailed(err)));\n};\n\nexport const fetchActiveRidesStart = () => ({\n  type: GET_ACTIVERIDES_BEGAN,\n});\n\nexport const fetchActiveRidesFailed = (errmess) => ({\n  type: GET_ACTIVERIDES_FAILED,\n  payload: errmess,\n});\n\nexport const fetchActiveRidesSuccess = (activeRides) => ({\n  type: GET_ACTIVERIDES_SUCCESS,\n  payload: activeRides,\n});\n\n// REDUCER\nconst ActiveRidesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_ACTIVERIDEDETAILS:\n      return {\n        ...state,\n        rideDetails: state.rides.find((ride) => ride._id === action.payload),\n      };\n\n    case GET_ACTIVERIDES_BEGAN:\n      return {\n        ...state,\n        isLoading: true,\n        errMsg: null,\n      };\n    case GET_ACTIVERIDES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: null,\n        rides: action.payload,\n      };\n    case GET_ACTIVERIDES_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default ActiveRidesReducer;\n","import * as Api from \"../services/api\";\n\nconst initialState = {\n  rideDetails: {},\n  rides: [],\n  isLoading: false,\n  errMsg: null,\n};\n\n// ACTION TYPES\nconst UPDATE_PASTRIDEDETAILS = \"UPDATE_PASTRIDEDETAILS\";\nconst GET_PASTRIDES_BEGAN = \"GET_PASTRIDES_BEGAN\";\nconst GET_PASTRIDES_FAILED = \"GET_PASTRIDES_FAILED\";\nconst GET_PASTRIDES_SUCCESS = \"GET_PASTRIDES_SUCCESS\";\n\n// ACTION CREATORS\nexport const updatePastRideDetails = (id) => ({\n  type: UPDATE_PASTRIDEDETAILS,\n  payload: id,\n});\n\nexport const fetchPastRides = (hospitalId) => (dispatch) => {\n  dispatch(fetchPastRidesStart());\n  Api.get(`hospital/pastrides/${hospitalId}`)\n    .then((data) => {\n      dispatch(fetchPastRidesSuccess(data.data));\n      dispatch(updatePastRideDetails(data.data[0]._id));\n    })\n    .catch((err) => dispatch(fetchPastRidesFailed(err)));\n};\n\nexport const fetchPastRidesStart = () => ({\n  type: GET_PASTRIDES_BEGAN,\n});\n\nexport const fetchPastRidesFailed = (errmess) => ({\n  type: GET_PASTRIDES_FAILED,\n  payload: errmess,\n});\n\nexport const fetchPastRidesSuccess = (pastRides) => ({\n  type: GET_PASTRIDES_SUCCESS,\n  payload: pastRides,\n});\n\n// REDUCER\nconst PastRidesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PASTRIDEDETAILS:\n      return {\n        ...state,\n        rideDetails: state.rides.find((ride) => ride._id === action.payload),\n      };\n\n    case GET_PASTRIDES_BEGAN:\n      return {\n        ...state,\n        isLoading: true,\n        errMsg: null,\n      };\n    case GET_PASTRIDES_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: null,\n        rides: action.payload,\n      };\n    case GET_PASTRIDES_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default PastRidesReducer;\n","import * as Api from \"../services/api\";\n\nconst initialState = {\n  isLoading: false,\n  errMsg: null,\n  successMsg: null,\n  isSuccess: false,\n  userData: {},\n};\n\n// ACTION TYPES\n\nconst POST_PATIENTDATA_BEGAN = \"POST_PATIENTDATA_BEGAN\";\nconst POST_PATIENTDATA_FAILED = \"POST_PATIENTDATA_FAILED\";\nconst POST_PATIENTDATA_SUCCESS = \"POST_PATIENTDATA_SUCCESS\";\n\nconst GET_USERDATA_BEGAN = \"GET_USERDATA_BEGAN\";\nconst GET_USERDATA_FAILED = \"GET_USERDATA_FAILED\";\nconst GET_USERDATA_SUCCESS = \"GET_USERDATA_SUCCESS\";\n\n// ACTION CREATORS\n\nexport const addPatientData = (data) => (dispatch) => {\n  dispatch(addPatientDataStart());\n  Api.post(\"/patient/add\", data)\n    .then((response) => {\n      dispatch(addPatientDataSuccess(response.data.message));\n      console.log(response.data);\n    })\n    .catch((ex) => dispatch(addPatientDataFailed(ex.response.data.error)));\n};\n\nexport const addPatientDataStart = () => ({\n  type: POST_PATIENTDATA_BEGAN,\n});\n\nexport const addPatientDataFailed = (errmess) => ({\n  type: POST_PATIENTDATA_FAILED,\n  payload: errmess,\n});\n\nexport const addPatientDataSuccess = (mess) => ({\n  type: POST_PATIENTDATA_SUCCESS,\n  payload: mess,\n});\n\nexport const getUserData = (userMobile) => (dispatch) => {\n  dispatch(getUserDataStart());\n  Api.get(\"/patient/add\")\n    .then((response) => {\n      dispatch(getUserDataSuccess(response.data));\n      console.log(response.data);\n    })\n    .catch((ex) => dispatch(getUserDataFailed(ex.response.data)));\n};\n\nexport const getUserDataStart = () => ({\n  type: GET_USERDATA_BEGAN,\n});\n\nexport const getUserDataFailed = (errmess) => ({\n  type: GET_USERDATA_FAILED,\n  payload: errmess,\n});\n\nexport const getUserDataSuccess = (data) => ({\n  type: GET_USERDATA_SUCCESS,\n  payload: data,\n});\n\n// REDUCER\nconst PatientReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POST_PATIENTDATA_BEGAN:\n      return {\n        ...state,\n        isLoading: true,\n        errMsg: null,\n        isSuccess: false,\n      };\n    case POST_PATIENTDATA_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: null,\n        isSuccess: true,\n        successMsg: action.payload,\n      };\n    case POST_PATIENTDATA_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMsg: action.payload,\n        isSuccess: false,\n      };\n\n    case GET_USERDATA_BEGAN:\n      return {\n        ...state,\n        errMsg: null,\n      };\n    case GET_USERDATA_SUCCESS:\n      return {\n        ...state,\n        errMsg: null,\n        userData: action.payload,\n      };\n    case GET_USERDATA_FAILED:\n      return {\n        ...state,\n        errMsg: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default PatientReducer;\n","import React from \"react\";\n\nconst Input = ({\n  name,\n  value,\n  onChange,\n  placeholder,\n  type,\n  label,\n\n  ...otherProps\n}) => {\n  return (\n    <div className=\"form-group\">\n      {label && <label htmlFor={name}>{label}</label>}\n      <input\n        value={value}\n        onChange={onChange}\n        name={name}\n        type={type}\n        className=\"form-control\"\n        id={name}\n        placeholder={placeholder}\n        {...otherProps}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport Input from \"./input\";\nvar fu = []\n\nconst PatientDetailForm = ({\n  onSubmit,\n  patientDetail,\n  onChangeInput,\n  className,\n  driverList,\n  gurdnumber,\n  searchedUser,\n  setlocationuser\n}) => {\n  const [users, setusers] = useState([])\n  const [foundusers, setfoundusers] = useState([])\n  useEffect(()=>{\n\n    fetch('https://serverprioritypulse.herokuapp.com/user',{\n    method:\"get\",\n    headers:{\n        \"Content-Type\":\"application/json\",\n        \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\n      }\n      // body:JSON.stringify({\n      //     query:value\n      // })\n    }).then(res => res.json())\n  .then(results => {\n      console.log(results)\n      setusers(results)\n      \n  })\n  },[])\n  const delay = (us)=>{\n    setlocationuser(us)\n  }\n  const se = (val) => {\n      fu =[]\n      for(var i=0;i<users.length;i++){\n        if((users[i].phoneNumber+'').indexOf(val) > -1){\n          // console.log(val)\n          fu.push(users[i])\n        }\n      }\n      console.log(fu)\n      setfoundusers(fu)\n      // searchedUser(fu)\n    }\n  // const userSearch =() =>{\n  //   onChangeInput()\n  // }\n  return (\n    <div className={`patientForm pb-4 pt-3 px-4 ${className}`}>\n      <h1 className=\"mb-1\">Patient Detail</h1>\n      <p>Fill the Details Below</p>\n      <form className=\"my-5\" onSubmit={onSubmit}>\n        <Input\n          name=\"name\"\n          value={patientDetail.name}\n          placeholder=\"Patient Name\"\n          onChange={onChangeInput}\n          type=\"text\"\n          required\n        />\n        <Input\n          name=\"age\"\n          value={patientDetail.age}\n          placeholder=\"Patient Age\"\n          onChange={onChangeInput}\n          type=\"number\"\n          required\n        />\n        <Input\n          name=\"patientCase\"\n          value={patientDetail.patientCase}\n          placeholder=\"Case\"\n          onChange={onChangeInput}\n          type=\"text\"\n          required\n        />\n        <Input\n          name=\"casePrior\"\n          value={patientDetail.casePrior}\n          placeholder=\"Priority Level\"\n          onChange={onChangeInput}\n          type=\"number\"\n          required\n        />\n        <Input\n          name=\"patientNo\"\n          value={patientDetail.patientNo}\n          placeholder=\"patient Contact\"\n          onChange={onChangeInput}\n          type=\"tel\"\n          required\n        />\n        <Input\n          name=\"guardianNo\"\n          value={patientDetail.guardianNo}\n          placeholder=\"Guardian Contact\"\n          onChange={(e)=>{\n         \n              // setvalue(e.target.value)\n           //   onChangeInput(<input name=\"guardianNo\" type=\"text\" class=\"form-control\" id=\"guardianNo\" placeholder=\"Guardian Contact\" required value={e.target.value}></input>)\n              se(e.target.value)\n              gurdnumber(e.target.value)\n              // console.log((users[0].phoneNumber+'').indexOf(e.target.value))\n            }}\n          type=\"tel\"\n          required\n        />\n        <div style={{maxHeight:'200px',overflow:'auto'}}>\n          {foundusers.length && foundusers.map((user,i)=>{\n            return <div key={i} \n            style={{color:'black',height:'30px',cursor:'pointer'}}\n            onClick={()=>{\n              gurdnumber(''+user.phoneNumber)\n              setfoundusers(user)\n              searchedUser(user)\n              // onChangeInput({name:'guardianNo',value:''+user.phoneNumber})\n              delay(user)\n              console.log(\"\"+user.phoneNumber)\n            }}\n            >{user.phoneNumber}</div>\n          })}\n        </div>\n        <div className=\"form-group\">\n          <select\n            name=\"pickedBy\"\n            className=\"custom-select\"\n            onChange={onChangeInput}\n            value={patientDetail.pickedBy}\n            required\n          >\n            <option value=\"\">Select Driver...</option>\n            {driverList.map((driver, i) => (\n              <option value={driver._id} key={i}>\n                {driver.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\" className=\"button\">\n          Submit\n        </button>\n        <p>Getting problem in submitting</p>\n      </form>\n      <Link to=\"/activeRides\">\n        <button className=\"button\">Track Patient</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default PatientDetailForm;\n\n\n\n\n// \n\n// <input type='text' value={value} onChange={(e)=>{\n//   setvalue(e.target.value)\n//   se(e.target.value)\n//   // console.log((users[0].phoneNumber+'').indexOf(e.target.value))\n// }} />","import React, { useState } from \"react\";\n\nimport { NavLink, Link } from \"react-router-dom\";\nimport profile from \"../assets/images/Profile.png\";\nimport { useSelector } from \"react-redux\";\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const user = useSelector((state) => state.hospital.currentUser);\n  const hospital = JSON.parse(localStorage.getItem('hospital'))\n  const toggle = () => setIsOpen(!isOpen);\n  // console.log(hospital.userType)\n  return (\n    <nav className=\"navbar navbar-expand-lg\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Priority Pulse\n        <p>Hospital Website</p>\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarPP\"\n        aria-controls=\"navbarPP\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={toggle}\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        className={`${!isOpen ? \"collapse\" : \"\"} navbar-collapse`}\n        id=\"navbarPP\"\n      >\n        <ul className=\"navbar-nav ml-auto\">\n          {user && (\n            <>\n              <li className=\"nav-item my-auto mx-2\">\n                <NavLink\n                  className=\"nav-link primary-text-color px-3\"\n                  to=\"/home\"\n                >\n                  Home\n                </NavLink>\n              </li>\n              <li className=\"nav-item my-auto mx-2\">\n                <NavLink\n                  className=\"nav-link primary-text-color px-3\"\n                  to=\"/activeRides\"\n                >\n                  Active Rides\n                </NavLink>\n              </li>\n\n              <li className=\"nav-item my-auto mx-2\">\n                <NavLink\n                  className=\"nav-link primary-text-color px-3\"\n                  to=\"/profile\"\n                >\n                  Profile\n                </NavLink>\n              </li>\n              {hospital && hospital.userType && hospital.userType === 'admin' && <li className=\"nav-item my-auto mx-2\">\n                <NavLink\n                  className=\"nav-link primary-text-color px-3\"\n                  to=\"/manageusers\"\n                >\n                  Manage Users\n                </NavLink>\n              </li>}\n              <li className=\"nav-item my-auto mx-2\">\n                <NavLink\n                  className=\"nav-link primary-text-color px-3\"\n                  to=\"/logout\"\n                >\n                  Logout\n                </NavLink>\n              </li>\n              <li className=\"nav-item my-auto mx-2\">\n                <img\n                  className=\"nav-link profile ml-2\"\n                  src={profile}\n                  alt=\"Profile\"\n                />\n              </li>\n            </>\n          )}\n\n          {!user && (\n            <>\n              <li className=\"nav-item my-auto mx-2\">\n                <NavLink\n                  className=\"nav-link primary-text-color px-3\"\n                  to=\"/register\"\n                >\n                  Register\n                </NavLink>\n              </li>\n              <li className=\"nav-item my-auto mx-2\">\n                <NavLink\n                  className=\"nav-link primary-text-color px-3\"\n                  to=\"/login\"\n                >\n                  Login\n                </NavLink>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useEffect ,useState,useCallback} from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport usermarkersvg from \"../assets/images/usermarkersvg.svg\";\nimport ambulancesvg from '../assets/images/ambulancessvg.svg'\nimport hospitalmarkersvg from \"../assets/images/hospitalmarkersvg.svg\";\nimport io from \"socket.io-client\";\n\nconst decodePolyline = require(\"decode-google-map-polyline\");\nlet usersocket, driversocket;\n\nlet  infoWindow, hospitalCoordinates,updatepostition,updatemarker;\nlet dmarker,umarker,pickuplocation , polyline,hospitallocation;\nlet map;\n\n// polyline =\n//  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\";\n\nconst IndexMap =  () =>{\n\n  const [initpolyline, setinitpolyline] = useState(  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\"  )\n  const [pickuplocation, setpickuplocation] = useState('')\n  const [ride, setride] = useState([])\n  const [hospitallocation, sethospitallocation] = useState('')\n  const rideDetails =  useSelector((state) => state.activeRides.rideDetails);\n  const userendpoi = \"http://134.209.158.239:3000/usertrack\";\n  const driverendpoi = \"http://134.209.158.239:3000/drivertrack\";\n\n useEffect(() => {\n   setride(rideDetails)\n   setinitpolyline(rideDetails.polyline)\n  console.log(rideDetails)\n   midware();\n  \n }, [rideDetails])\n\n useEffect(() => {\nrenderMap();\n }, [initpolyline])\n\n \n  const [userLocation, setUserLocation] = useState([]);\n const [driverLocation, setDriverLocation] = useState([]);\n /*\n useEffect(() => {\n  //  if(ride.length)\n setinitpolyline(rideDetails.polyline)\n  // console.log(initpolyline,\"changed\")\n  renderMap();\n }, [rideDetails])\n*/\nconst midware = () => {\n  var rideDetls =  rideDetails\n // console.log(rideDetls.polyline)\n}\n useEffect(() => {\n  usersocket = io.connect(userendpoi);\n  driversocket = io.connect(driverendpoi);\n  if(rideDetails){\n  usersocket.emit(\"join\", { roomid: rideDetails._id },console.log(\"joined\"));\n  }\n  usersocket.on(\"userlocation\", (locationuser) => {\n    setUserLocation(locationuser);\n\n   console.log(locationuser,\"usersocket\");\n  });\n  if(rideDetails.pickedBy){\n  driversocket.emit(\"join\", { roomid: rideDetails.pickedBy._id });\n//console.log(\"id exiext\")  \n}\n  driversocket.on(\"driverlocation\", (locationdriver) => {\n    setDriverLocation(locationdriver);\n    if (locationdriver) {\n   //   console.log(\"Yes\");\n   console.log(locationdriver.coordinates,\"driverlocation\")\n\n \n    }\n  });\n}, [rideDetails]);\n\nif(driverLocation.coordinates){\n  var opos={\n  lat : driverLocation.coordinates[0],\n  lng : driverLocation.coordinates[1]\n}}\n\nif(userLocation.coordinates){\n  var upos ={\n    lat : userLocation.coordinates[0],\n    lng : userLocation.coordinates[1]\n  }\n}\n /* const details = [rideDetails].map(detail=>{\n  setinitpolyline(detail.polyline)\n//setinitpolyline(detail.polyline)\n    // return (\n    //  pickuplocation =detail.pickUplocation,\n    // polyline = detail.polyline,\n    // hospitallocation= detail.pickedBy)\n  })*/\n\n /* useEffect(()=>{\n    console.log(\"polyline changed\")\n\n  },[polyline])*/\n//console.log(pickuplocation)\n\n//console.log(typeof(polyline))\n//console.log(hospitallocation)\n\n//drivermarker\nuseEffect(() => {\n  if(!map )\n\n  return;\n  if(dmarker && opos )\n       dmarker.setMap(null)\n\n       dmarker = new window.google.maps.Marker(\n         {position:opos ,\n        icon: ambulancesvg,\n\n        map})\n}, [driverLocation])\n\nuseEffect(() => {\n  if(!map)\n  return;\n  if(umarker && upos )\n       umarker.setMap(null)\n//console.log(userLocation.coordinates)\n\n       umarker = new window.google.maps.Marker(\n         {position: upos\n       ,\n        icon: usermarkersvg,\n\n        map})\n}, [userLocation])\n\n/*\n if(umarker && userLocation.coordinates )\n       umarker.setMap(null)\nconsole.log(userLocation.coordinates)\n\n       {userLocation.coordinates && ( umarker = new window.google.maps.Marker(\n         {position: {lat: userLocation.coordinates[0], lng : userLocation.coordinates[1]}\n       ,\n        icon: usermarkersvg,\n\n        map}))}\n*/\n//polyline\n\n/*\n\n const [freestate]= useState(\"\");\nuseEffect(()=>{\n  renderMap();\n},[freestate]);\n*/\nconst renderMap = () => {\n  loadScript(\n    \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA&libraries=geometry&callback=initMap\"\n  );\n  window.initMap = initMap;\n};\n// api AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\nconst initMap = async () =>{\n // polyline= await  polyline.toString()\n  convrter(initpolyline)\n  //console.log(typeof(initpolyline))\n  await initMap1()\n}\n\nconst convrter =async(pol) =>{\n // pol = await JSON.stringify(pol)\n // console.log(typeof(pol))\n // console.log(initpolyline)\n}\n\nconst initMap1 =()=> {\n\n//polyline= JSON.stringify(polyline)\n  if(initpolyline !== \"\" && typeof(initpolyline)===\"string\"){\n //   console.log(\"polyline strinefed\")\n   let polyline2 = initpolyline;\n //polyline2 = polyline2.replace(\"\\\\\\\\\", \"\\\\\");\n //  polyline2 = polyline2.substring(1, polyline2.length - 1);\n      let pathCoordinates = decodePolyline(polyline2);\n     let pathlength = pathCoordinates.length;\n  //   console.log(pathCoordinates);\n//console.log(polyline2)\n\n\n  map = new window.google.maps.Map(document.getElementById(\"map\"), {\n    center: { lat: 16.7566, lng: 81.6970 },\n    zoom: 15,\n  });\n  infoWindow = new window.google.maps.InfoWindow(); // Try HTML5 geolocation.\n  map.setCenter(pathCoordinates[0]);\n\n     //polyline  \n      const polylinePath = new window.google.maps.Polyline({\n        path: pathCoordinates,\n        geodesic: true,\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n      });\n      polylinePath.setMap(map);\n\n//polyline markers\nvar marker3 = new window.google.maps.Marker({\n  map,\nicon : usermarkersvg,\n  position: pathCoordinates[0],\n});\nvar marker4 = new window.google.maps.Marker({\n  map,\nicon: hospitalmarkersvg,\n  position: pathCoordinates[pathlength - 1],\n});\n      \n\n\n\n  }else{\n    console.log(\"fail\")\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: 16.7566, lng: 81.6970 },\n      zoom: 15,\n    });\n  }\n\n}\n\n\n  return (\n    <main >\n    \n      <div style={{  height: \"60vh\" }}id=\"map\" className=\"indexMap\"></div>\n    </main>\n  );\n}\n\nfunction loadScript(url) {\n  var index = window.document.getElementsByTagName(\"script\")[0];\n  var script = window.document.createElement(\"script\");\n  script.src = url;\n  script.async = true;\n  script.defer = true;\n  index.parentNode.insertBefore(script, index);\n}\n\n\nexport default IndexMap;\n\n/*import React, { Component } from \"react\";\n//import \"./App.css\";\n//import maptheme from \"./maptheme\";\n\n//decoder\nconst decodePolyline = require(\"decode-google-map-polyline\");\nvar polyline2 =\n  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\";\nvar pathCoordinates = decodePolyline(polyline2);\nvar pathlength = pathCoordinates.length;\n\nconsole.log(pathCoordinates);\n\n//class starts\n\nclass IndexMap extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.renderMap();\n  }\n\n  renderMap = () => {\n    loadScript(\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA&libraries=geometry&callback=initMap\"\n    );\n    window.initMap = this.initMap;\n  };\n  // api AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\n  //maps\n  initMap = () => {\n    var map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: { lat: 25.27794, lng: 83.00244 },\n      zoom: 18,\n    });\n    //polyline { lat: 25.27794, lng: 83.00244 }\n    const polylinePath = new window.google.maps.Polyline({\n      path: pathCoordinates,\n      geodesic: true,\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 1.0,\n      strokeWeight: 2,\n    });\n    polylinePath.setMap(map);\n\n    //markers\n\n    var marker3 = new window.google.maps.Marker({\n      map,\n\n      position: pathCoordinates[0],\n    });\n    var marker4 = new window.google.maps.Marker({\n      map,\n\n      position: pathCoordinates[pathlength - 1],\n    });\n\n\n    //end\n  };\n\n  render() {\n    const { mapvh, mapvw } = this.props;\n\n    return (\n      <main>\n        <div style={{ width: mapvw, height: mapvh }} id=\"map\"></div>\n      </main>\n    );\n  }\n}\n\nfunction loadScript(url) {\n  var index = window.document.getElementsByTagName(\"script\")[0];\n  var script = window.document.createElement(\"script\");\n  script.src = url;\n  script.async = true;\n  script.defer = true;\n  index.parentNode.insertBefore(script, index);\n}\n\nexport default IndexMap;\n*/\n","import React from \"react\";\n\nimport Input from \"./input\";\nimport GMap from \"./gMaps\";\n\nconst HomeLocation = ({\n  className,\n  onChangeInput,\n  userLocation,\n  setUserLocation,\n  patientDetail,\n  setPatientDetails\n}) => {\n  return (\n    <>\n      <div className={`homeLocation ${className}`}>\n       \n        <GMap mapvh=\"40vh\"\n         setUserLocation={setUserLocation} \n         setPatientDetails={ setPatientDetails}\n         patientDetail={patientDetail}\n         />\n        <div className=\"row mt-4 pt-2\">\n          <div className=\"col-md-12 col-lg-6 pr-5\">\n            <Input\n              name=\"area\"\n              value={userLocation.area}\n              onChange={onChangeInput}\n              placeholder=\"Area\"\n              label=\"Area\"\n            />\n            <Input\n              name=\"landmarkStreet\"\n              value={userLocation.landmarkStreet}\n              onChange={onChangeInput}\n              placeholder=\"Street\"\n              label=\"Landmark Street\"\n            />\n          </div>\n          <div className=\"col-md-12 col-lg-6\">\n            <Input\n              name=\"landmark\"\n              value={userLocation.landmark}\n              onChange={onChangeInput}\n              placeholder=\"Landmark\"\n              label=\"Landmark\"\n            />\n            <Input\n              name=\"cityState\"\n              value={userLocation.cityState}\n              onChange={onChangeInput}\n              placeholder=\"City, State\"\n              label=\"City, State\"\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default HomeLocation;\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"spinner-border text-info\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n\nexport default Loading;\n","import jwtDecode from \"jwt-decode\";\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"hospital\");\n};\n\nexport const getTokenRequire = () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    return token;\n  }catch (error){\n    console.log(error)\n    return null;\n  }\n}\n\nexport const getHosipaRequire = () => {\n  try {\n    const token = localStorage.getItem(\"hospital\");\n    return token;\n  }catch (error){\n    console.log(error)\n    return null;\n  }\n}\n\nexport const getCurrentUser = () => {\n  try {\n    const jwt = localStorage.getItem(\"token\");\n    return jwtDecode(jwt)._id;\n  } catch (error) {\n    return null;\n  }\n};\n\nexport default {\n  logout,\n  getCurrentUser,\n  getTokenRequire,\n  getHosipaRequire\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchDrivers } from \"../store/Drivers\";\n\nimport PatientDetailForm from \"../components/patientDetailForm\";\nimport Header from \"../components/headerComponent\";\n\nimport HomeLocation from \"../components/homeLocation\";\nimport Loading from \"../components/loading\";\nimport { addPatientData } from \"../store/Patient\";\nimport auth from \"../services/authService\";\nimport { useHistory } from \"react-router-dom\";\n\nimport user1 from \"../assets/images/hospital.JPG\"\nimport user2 from \"../assets/images/hostrack.JPG\"\nimport hoslogin from \"../assets/images/hoslogin.JPG\"\nimport userabout from \"../assets/images/userabout.JPG\"\n\n\nimport \"./homepage.css\"\n\nconst userData =[\n  {\n      icon :<i  class=\"fas fa-location\" style={{color:\"#343BFC\"}}></i>,\n      title: \"Book and track from anyplace\",\n      desc:\"You will have the command over ambulances and will be globally seen. \",\n  },\n  {\n      icon :<i class=\"fas fa-video\"  style={{color:\"#B2C248\"}}></i>,\n      title: \"Live feed to hospital and doctor\",\n      desc:\"Doctors can get live feed from the ambulance and prepare for premedication.\",\n  },\n  {\n      icon :<i class=\"fas fa-hospital\"  style={{color:\"#E55B3C\"}}></i>,\n      title: \"Premedication\",\n      desc:\"Hospitals can prepare for premedication as doctors know the whole situation.\",\n  },\n  {\n      icon :<i class=\"fas fa-calendar-plus\" style={{color:\"#00ff00\"}}></i>,\n      title: \"First to Market\",\n      desc:\"We are first to introduce the traffic access technology, collaboration with government. \",\n  },{\n      icon :<i  class=\"fas fa-users-cog\" style={{color:\"#C0C0C0\"}}></i>,\n      title: \"Command over Ambulance\",\n      desc:\"Hospital authority can assign drivers and command over ambulance. \",\n  },\n  {\n      icon :<i class=\"fas fa-hands-helping\" style={{color:\"#808000\"}}></i>,\n      title: \"Trust\",\n      desc:\"People get trust as they have every thing that a hospital authority can give.\",\n  },\n  {\n      icon :<i class=\"fas fa-chart-bar\"  style={{color:\"green\"}}></i>,\n      title: \"Competition\",\n      desc:\"As we have a national connections, you can get publicity by all means.\",\n  },\n  {\n      icon :<i class=\"fas fa-tachometer-alt\" style={{color:\"#FFA500\"}}></i>,\n      title: \"Success Rate\",\n      desc:\"As you will be increasing patient survival, there will be success in saving lifes.\",\n  },\n]\n\n\nconst hoshowData =[\n  {\n      color :\"#343BFC\",\n      title : \"Booking and track ambulance\",\n      desc : \"Hospital authority can give and confirm booking by filling data and assigning the driver.\"\n       \n  },\n  { color :\"#B2C248\",\n      title : \"Live Feed\",\n      desc : \"Doctors can get a live feed from the paitent and respond accordingly\"\n  },  \n  {  color :\"#E55B3C\",\n      title : \"Premedication\",\n      desc : \"Authority can make arrangements as doctor could know whole situation of the case.\"\n  },\n  { color :\"#00ff00\",\n      title : \"Manage Ambulance drivers\",\n      desc : \"Can assign, add, manage ambulance drivers and know each rides they make. \"\n  },\n  { color :\"#808000\",\n      title : \"Requesting traffic control to give access of traffic light\",\n      desc : \"Hospital authority can request traffic control to change traffic lights according to the ride \"\n  },\n]\n\nconst Home = () => {\n  const history = useHistory();\n  const [searchedUsers, setsearchedUsers] = useState([])\n  //console.log(searchedUsers)\n  const [patientDetails, setPatientDetails] = useState({\n    name: \"\",\n    age: \"\",\n    patientCase: \"\",\n    casePrior: \"\",\n    guardianNo: \"\",\n    patientNo: \"\",\n    pickedBy: \"\",\n    pickUplocation: {\n      coordinates: [12.24, 34.38889],\n    },\n  });\n  const setlocationuser =(user)=>{\n    // setPatientDetails({pickUplocation : user.location})\n    setPatientDetails((prev) => ({\n      ...prev,\n      pickUplocation : user.location\n    }));\n   // console.log(user.location)\n  }\n\n // console.log(patientDetails.pickUplocation)\n  const [userLocation, setUserLocation] = useState({\n    area: \"\",\n    landmark: \"\",\n    landmarkStreet: \"\",\n    cityState: \"\",\n  });\n  const driverLoading = useSelector((state) => state.drivers.isLoading);\n  const driverList = useSelector((state) => state.drivers.driverDetails); // Replace 1 with hospital ID\n\n  \n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchDrivers(auth.getCurrentUser()));\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addPatientData(patientDetails));\n    console.log(patientDetails);\n    history.push('/activeRides')\n  };\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setPatientDetails((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n   console.log(currentTarget)\n  };\n\n//console.log(giraida)\n// useEffect(()=>{\n//   setPatientDetails((prev)=>({\n//     ...prev,\n//     guardianNo:giraida\n//   }));\n//  // console.log(\"perforemed\")\n// },[giraida])\n\n  const handleChangeGN = async(num) => {\n    // setgiraida(num)\n    console.log(num)\n    var name = 'guardianNo';\n    var value = num;\n    setPatientDetails((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n    //  console.log(typeof(num))\n    // fetch('')\n  };\n  console.log(patientDetails)\n\n//console.log(patientDetails.guardianNo)\n\n  const handleLocationChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setUserLocation((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <div className=\"dark-screen pb-5\">\n        <Header />\n        <div className=\"app-container mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-12 col-lg-8 mt-0.75 px-0\">\n              <HomeLocation\n                className=\"mx-3\"\n                userLocation={userLocation}\n                onChangeInput={handleLocationChange}\n                setUserLocation={setUserLocation}\n                patientDetail={patientDetails}\n                setPatientDetails={setPatientDetails}\n\n              />\n            </div>\n            <div className=\"col-md-12 col-lg-4 mt-0.75 px-0\">\n              {driverLoading ? (\n                <Loading />\n              ) : (\n                <PatientDetailForm\n                  className=\"mx-auto\"\n                  onSubmit={handleSubmit}\n                  patientDetail={patientDetails}\n                  onChangeInput={handleChange}\n                  driverList={driverList}\n                  gurdnumber={handleChangeGN}\n                  searchedUser={setsearchedUsers}\n                  setlocationuser={setlocationuser}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"light-screen how-work\">\n\n   \n      <div className=\"hoshowcontainer\">\n<div className=\"hoscoln1\" >\n<div className=\"workheading\">\nHow it Works ?\n    </div>\n            <div className=\"hoscol1inside\">\n            {hoshowData.map((item, index)=>{\n                     return(\n                         <div className=\"hoshowData\" key=\"index\">\n                           <div style={{color: `${item.color}`}}  className=\"Titleh\" >{item.title}</div>\n                           <div className=\"Desch\">{item.desc}</div>\n                         </div>\n                     )\n                 })}  \n             \n                \n            </div>\n            </div>\n            \n            <div className=\"hoscoln2\">\n            <div className=\"slider\">\n                  \n                  <div className=\"images\">\n                  <input type=\"radio\" name=\"slide\" id=\"img1\"  />\n                  <input type=\"radio\" name=\"slide\" id=\"img2\" />\n                  <input type=\"radio\" name=\"slide\" id=\"img3\" />\n                  <input type=\"radio\" name=\"slide\" id=\"img4\" />\n                  \n                  <img className=\"m1 first\" src={hoslogin} alt=\"img1\"  />\n                  <img className=\"m1\" src={user1} alt=\"img2\" />\n                  <img className=\"m1\" src={user2} alt=\"img3\" />\n                  <img className=\"m1\" src={userabout} alt=\"img4\" />\n                  \n                  \n                  \n                       </div>\n                       <div className=\"dots\">\n                  <label for=\"img1\"></label>\n                  <label for=\"img2\"></label>\n                  <label for=\"img3\"></label>\n                  <label for=\"img4\"></label>\n                       </div>\n                   \n                  </div>  \n            </div>\n\n</div>\n\n      <div className=\"colcolumn1\">\n   <div className=\"colpheading\">\n  Perks \n       </div>\n       <div className=\"colWrapper\">     \n   {userData.map((item, index)=>{\n                        return(\n                            <div className=\"StatsBox\" key=\"index\">\n                              <div className=\"Icon\">{item.icon}</div>\n                              <div className=\"Title\">{item.title}</div>\n                              <div className=\"Desc\">{item.desc}</div>\n                            </div>\n                        )\n                    })}  \n                     </div>      \n   </div>\n        </div>\n    </>\n  );\n};\n\nexport default Home;\n\n/*\n <div className=\"light-screen how-work\">\n        <div className=\"app-container mt-5 mb-5\">\n          <div className=\"row mb-5\">\n            <div className=\"col-md-12 col-lg-6 text-left\">\n              <h1>How it works</h1>\n            </div>\n            <div className=\"col-md-12 col-lg-6 text-right\">\n              <img\n                className=\"img-fluid\"\n                alt=\"work\"\n                src=\"https://picsum.photos/700/450\"\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12 col-lg-6 text-left\">\n              <img\n                className=\"img-fluid mx-auto\"\n                alt=\"work\"\n                src=\"https://picsum.photos/700/450\"\n              />\n            </div>\n            <div className=\"col-md-12 col-lg-6 text-right\">\n              <h1>How it works</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n      */","import React from \"react\";\n\nconst ActiveRidesList = ({ list, className, onClick }) => {\n  return (\n    <>\n      <table className={`activeRidesList ${className}`}>\n        <tbody>\n          {list.map((ride, i) => (\n            <tr key={i} onClick={onClick(ride._id)}>\n              <td style={{ width: \"250px\" }}>{ride.pickedBy.name}</td>\n              <td className=\"text-right pr-2\">\n                <svg width=\"15\" height=\"15\">\n                  <circle\n                    cx=\"7.5\"\n                    cy=\"7.5\"\n                    r=\"7.5\"\n                    strokeWidth=\"4\"\n                    fill={ride.signalColor}\n                  />\n                </svg>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default ActiveRidesList;\n","import React from \"react\";\n\nconst RideDetail = ({ ride, className }) => {\n  return (\n    <>\n      <table className={`activeRidesList ${className}`}>\n        <tbody>\n          {ride.pickedBy && (\n            <tr>\n              <td className=\"ride-header\">Driver Name:</td>\n              <td className=\"ride-ans\">{ride.pickedBy.name}</td>\n            </tr>\n          )}\n          {ride.pickedBy && (\n            <tr>\n              <td className=\"ride-header\">Driver Contact:</td>\n              <td className=\"ride-ans\">{ride.pickedBy.mobileNo}</td>\n            </tr>\n          )}\n\n          {ride.name && (\n            <tr>\n              <td className=\"ride-header\">Patient Name:</td>\n              <td className=\"ride-ans\">{ride.name}</td>\n            </tr>\n          )}\n          {ride.guardianNo && (\n            <tr>\n              <td className=\"ride-header\">Guardian Contact:</td>\n              <td className=\"ride-ans\">{ride.guardianNo}</td>\n            </tr>\n          )}\n          {ride.age && (\n            <tr>\n              <td className=\"ride-header\">Patient Age:</td>\n              <td className=\"ride-ans\">{ride.age}</td>\n            </tr>\n          )}\n          {ride.pcase && (\n            <tr>\n              <td className=\"ride-header\">Patient Case:</td>\n              <td className=\"ride-ans\">{ride.pcase}</td>\n            </tr>\n          )}\n          {ride.casePrior && (\n            <tr>\n              <td className=\"ride-header\">Priority Level:</td>\n              <td className=\"ride-ans\">{ride.casePrior}</td>\n            </tr>\n          )}\n          {ride.pickedBy && (\n            <tr>\n              <td className=\"ride-header\">Location:</td>\n              <td className=\"ride-ans\">{ride.pickedBy.hospital.address}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default RideDetail;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport auth from \"../services/authService\";\nimport IndexMap from \"../components/indexMap\";\nimport Header from \"../components/headerComponent\";\nimport ActiveRidesList from \"../components/activeRidesList\";\n\nimport {\n  fetchActiveRides,\n  updateActiveRideDetails,\n} from \"../store/ActiveRides\";\nimport Loading from \"../components/loading\";\nimport RideDetail from \"../components/rideDetail\";\n\nconst ActiveRides = () => {\n  const activeRides = useSelector((state) => state.activeRides.rides); // Replace 1 with Hospital ID\n  const dispatch = useDispatch();\n\n  const rideDetails = useSelector((state) => state.activeRides.rideDetails);\n  const activeRidesLoading = useSelector(\n    (state) => state.activeRides.isLoading\n  );\n  useEffect(() => {\n    dispatch(fetchActiveRides(auth.getCurrentUser()));\n  }, []);\n\n  const clickHandler = (patientId) => () => {\n    dispatch(updateActiveRideDetails(patientId));\n  };\n\n\n // console.log(rideDetails)\n\n  return (\n    <>\n      <div className=\"light-screen pb-5\">\n        <Header />\n        <div className=\"app-container mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-12 col-lg-9 px-5 mt-4\">\n              <IndexMap mapvh=\"60vh\" />\n            </div>\n            <div className=\"col-md-12 col-lg-3 mt-1\">\n              <div className=\"rides\">\n                <div className=\"ridesList mb-4\">\n                  <h3>Active Rides</h3>\n                  {activeRidesLoading ? (\n                    <Loading />\n                  ) : (\n                    <ActiveRidesList\n                      onClick={clickHandler}\n                      className=\"mx-auto alternate-table-color\"\n                      list={activeRides}\n                    />\n                  )}\n                </div>\n                <div className=\"ridesDetail\">\n                  <h3>Ride Details</h3>\n                  <RideDetail\n                    className=\"alternate-table-color mx-auto\"\n                    ride={rideDetails}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ActiveRides;\n","import React from \"react\";\n\nimport hospitalImage from \"../assets/images/hospitalpic.jpg\";\n\nconst HospitalDetails = ({ hospital }) => {\n  return (\n    <div className=\"hospitalDetails\">\n      <div className=\"row\">\n        <div className=\"col-md-1 col-lg-1\"></div>\n        <div className=\"col-md-11 col-lg-3 pr-5\">\n          <img\n            className=\"img-fluid hosp-image\"\n            src={hospitalImage}\n            alt={hospital.name}\n          />\n        </div>\n        <div className=\"col-md-12 col-lg-8 mx-auto\">\n          <h4>{hospital.name}</h4>\n          <p>{hospital.address}</p>\n          <div className=\"row hospitalSubDetails\">\n            <div className=\"col-md-12 col-lg-5\">\n              <table className=\"mt-3\">\n                <tbody>\n                  {hospital.code && (\n                    <tr className=\"hospitalCode\">\n                      <td className=\"td-head\">Hospital Code</td>\n                      <td className=\"colon\">:</td>\n                      <td>{hospital.code}</td>\n                    </tr>\n                  )}\n                  {hospital.numberOfDrivers && (\n                    <tr>\n                      <td className=\"td-head\">Total Driver</td>\n                      <td className=\"colon\">:</td>\n                      <td>{hospital.numberOfDrivers}</td>\n                    </tr>\n                  )}\n                  {hospital.subType && (\n                    <tr>\n                      <td className=\"td-head\">Subscription Type</td>\n                      <td className=\"colon\">:</td>\n                      <td>{hospital.subType}</td>\n                    </tr>\n                  )}\n                  {hospital.reqUsed && (\n                    <tr>\n                      <td className=\"td-head\">Request Used</td>\n                      <td className=\"colon\">:</td>\n                      <td>{hospital.reqUsed}</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"col-md-12 col-lg-7\">\n              <table className=\"mt-3\">\n                <tbody>\n                  {hospital.subExpiry && (\n                    <tr className=\"subExpiry\">\n                      <td className=\"td-head\">Subscription Ends on</td>\n                      <td className=\"colon\">:</td>\n                      <td>{hospital.subExpiry}</td>\n                    </tr>\n                  )}\n                  {hospital.rating && (\n                    <tr>\n                      <td className=\"td-head\">Rating</td>\n                      <td className=\"colon\">:</td>\n                      <td>{hospital.rating}</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HospitalDetails;\n","import React from \"react\";\n\nconst DriversList = ({ list, className, onClick }) => {\n  return (\n    <>\n      <table className={`activeRidesList ${className}`}>\n        <tbody>\n          {list.map((ride, i) => (\n            <tr key={i} onClick={onClick(ride._id)}>\n              <td style={{ width: \"250px\" }}>{ride.name}</td>\n              <td className=\"text-right pr-2\">\n                <svg width=\"15\" height=\"15\">\n                  <circle\n                    cx=\"7.5\"\n                    cy=\"7.5\"\n                    r=\"7.5\"\n                    strokeWidth=\"4\"\n                    fill={ride.signalColor}\n                  />\n                </svg>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default DriversList;\n","import React from \"react\";\nconst DateTime = (timestamp) => {\n  const x = new Date(timestamp);\n  return `${x.getHours()}:${x.getMinutes()} - ${x.getDate()}/${x.getMonth()}/${x.getFullYear()}`;\n};\nconst PatientTable = ({ data, className, onClick }) => {\n  if (data.length === 0) {\n    return <div></div>;\n  }\n  return (\n    <table className={`patientTable ${className}`} style={{ minWidth: \"100%\" }}>\n      <thead>\n        <tr>\n          <th>S. No.</th>\n          <th>Request Time</th>\n          <th>Driver Name</th>\n          <th>Driver Contact</th>\n          <th>Patient Name</th>\n          <th>Patient Case</th>\n          <th>Priority Level</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((patient, i) => (\n          <tr key={i} onClick={onClick(patient._id)}>\n            <td>{i + 1}</td>\n            <td>{DateTime(patient.createdAt)}</td>\n            <td>{patient.pickedBy.name}</td>\n            <td>{patient.pickedBy.mobileNo}</td>\n            <td>{patient.name}</td>\n            <td>{patient.pcase}</td>\n            <td>{patient.casePrior}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PatientTable;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./driverform.css\"\n\nimport Profile from \"../assets/images/Profile.png\";\nimport licensepicutre from \"../assets/images/licencepic.jpg\"\n\nimport {addDriverData} from \"../store/Drivers\"\n\nconst Driverform =() =>{\n\nconst [driverformdetails, setdriverformdetails] = useState({\n    name:\"\",\n    contact:\"\",\n    age:\"\",\n    ambulanceno:\"\",\n    licenseno:\"\",\n    uniquecode:\"\",\n    address:\"\",\n    hospital:\"\",\n    submittedby:\"\",\n    licensepic: null,\n    driverpic: null,\n})\n\nconst dispatch = useDispatch();\n\nconst handleChange =({currentTarget})=>{\n   const { name, value } = currentTarget;\n   setdriverformdetails((prev) => ({\n     ...prev,\n     [name]: value,\n   }));\n  console.log(currentTarget)\n}\n\nconst handleSubmit = (e) => {\n   e.preventDefault();\n   dispatch(addDriverData(driverformdetails));\n   console.log(driverformdetails);\n  \n };\n\n    return (\n        <div className=\"totalformcss\">\n            <h1>Fill all Details</h1>\n            <form className=\"my-5\" onSubmit={handleSubmit}>\n\n                <div className=\"insideformtotal\">\n                    <div className=\"formfills\">\n               <label>Driver Name :</label>   <input\n                   name=\"name\"\n                   value={driverformdetails.name}\n                   placeholder=\"Driver Name\"\n                   onChange={handleChange}\n                   type=\"text\"\n                   required\n                /> <br/>\n               <label>Contact :</label>    <input\n                   name=\"contact\"\n                   value={driverformdetails.contact}\n                   placeholder=\"Contact\"\n                   onChange={handleChange}\n                   type=\"number\"\n                   required\n                /> <br/>\n                 <label>Age :</label>    <input\n                   name=\"age\"\n                   value={driverformdetails.age}\n                   placeholder=\"Age\"\n                   onChange={handleChange}\n                   type=\"number\"\n                   required\n                /> <br/>\n                <label>Ambulance No :</label> <input\n                   name=\"ambulanceno\"\n                   value={driverformdetails.ambulanceno}\n                   placeholder=\"Ambulance No\"\n                   onChange={handleChange}\n                   type=\"text\"\n                   required\n                /> <br/>\n                 <label>License No :</label>   <input\n                   name=\"licenseno\"\n                   value={driverformdetails.licenseno}\n                   placeholder=\"License No\"\n                   onChange={handleChange}\n                   type=\"number\"\n                   required\n                /> <br/>\n                 <label>Unique Code :</label>    <input\n                   name=\"uniquecode\"\n                   value={driverformdetails.uniquecode}\n                   placeholder=\"Unique Code\"\n                   onChange={handleChange}\n                   type=\"number\"\n                   required\n                /> <br/>\n                <label>Address :</label> <input\n                   name=\"address\"\n                   value={driverformdetails.address}\n                   placeholder=\"Address\"\n                   onChange={handleChange}\n                   type=\"text\"\n                   required\n                /> <br/>\n                 <label>Hospital :</label>    <input\n                   name=\"hospital\"\n                   value={driverformdetails.hospital}\n                   placeholder=\"Hospital\"\n                   onChange={handleChange}\n                   type=\"text\"\n                   required\n                /> <br/>\n\n               <br/><br/>\n                <label>Submittedby :</label> <input\n                   name=\"submittedby\"\n                   value={driverformdetails.submittedby}\n                   placeholder=\"Submittedby\"\n                   onChange={handleChange}\n                   type=\"text\"\n                   required\n                />  <br/>\n                <br/>\n  \n                   <div className=\"allbuttons\">\n                   <button type=\"submit\" className=\"button\">   Submit </button>\n                       <p>Getting problem in submitting</p>\n                   </div>\n        </div>\n        \n    <div className=\"imagesside\">\n        <div className=\"licensepicclass\">\n                 \n                 <label>License Picture:</label> \n                    <input\n                    value={driverformdetails.licensepic}\n                    type=\"file\"\n                 \n                 /> \n                 </div>\n \n                 <div className=\"driverpicclass\">\n                    \n                 <label>Driver Pic:</label>    <input\n                 value={driverformdetails.driverpic}\n                 type=\"file\"\n             \n              /> \n                 </div>\n    </div>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default Driverform\n","import React, { useEffect, useState }  from 'react'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loading from '../loading';\nimport \"./Driverrequest.css\"\n\nimport {updateDrivertotaldetails} from \"../../store/Drivers\" \n\nconst DateTime = (timestamp) => {\n    const x = new Date(timestamp);\n    return `${x.getHours()}:${x.getMinutes()} - ${x.getDate()}/${x.getMonth()}/${x.getFullYear()}`;\n  };\n\n  const DriverTable = ({ data, className, onClick }) => {\n    if (data.length === 0) {\n      return <div></div>;\n    }\n    return (\n      <table className={`patientTable ${className}`} style={{ minWidth: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>S. No.</th>\n            <th>Request Time</th>\n            <th>Driver Name</th>\n            <th>Driver Contact</th>\n            <th>Ambulance No</th>\n            <th>License No</th>\n            <th>Unique Code</th>\n          </tr>\n        </thead>\n        <tbody>\n           {data.map((driver, i) => (\n            <tr key={i} onClick={onClick(driver.name)}>\n              <td>{i + 1}</td>\n              <td>{DateTime(driver.createdAt)}</td>\n              <td>{driver.name}</td>\n              <td>{driver.contact}</td>\n              <td>{driver.ambulanceno}</td>\n              <td>{driver.licenseno}</td>\n              <td>{driver.uniquecode}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\nconst DriverDetaillist =({driver,className})=>{\n  return (\n    <>\n      <table className={`activeRidesList ${className}`}>\n        <tbody>\n          {driver.name && (\n            <tr>\n              <td className=\"ride-header\">Driver Name:</td>\n              <td className=\"ride-ans\">{driver.name}</td>\n            </tr>\n          )}\n          {driver.contact && (\n            <tr>\n              <td className=\"ride-header\">Driver Contact:</td>\n              <td className=\"ride-ans\">{driver.contact}</td>\n            </tr>\n          )}\n\n          {driver.ambulanceno && (\n            <tr>\n              <td className=\"ride-header\">Ambulance No:</td>\n              <td className=\"ride-ans\">{driver.ambulanceno}</td>\n            </tr>\n          )}\n          {driver.licenseno && (\n            <tr>\n              <td className=\"ride-header\">License No:</td>\n              <td className=\"ride-ans\">{driver.licenseno}</td>\n            </tr>\n          )}\n          {driver.uniquecode && (\n            <tr>\n              <td className=\"ride-header\">Unique Code:</td>\n              <td className=\"ride-ans\">{driver.uniquecode}</td>\n            </tr>\n          )}\n          {driver.address && (\n            <tr>\n              <td className=\"ride-header\">Address:</td>\n              <td className=\"ride-ans\">{driver.address}</td>\n            </tr>\n          )}\n          {driver.hospital && (\n            <tr>\n              <td className=\"ride-header\">Hospital:</td>\n              <td className=\"ride-ans\">{driver.hospital}</td>\n            </tr>\n          )}\n          {driver.submittedby && (\n            <tr>\n              <td className=\"ride-header\">Submitted by:</td>\n              <td className=\"ride-ans\">{driver.submittedby}</td>\n            </tr>\n          )}\n           {driver.licensepic && (\n            <tr>\n              <td className=\"ride-header\">License Picture:</td>\n              <td className=\"ride-ans\">{driver.licensepic}</td>\n            </tr>\n          )}\n           {driver.driverpic && (\n            <tr>\n              <td className=\"ride-header\">Driver Pic:</td>\n              <td className=\"ride-ans\">{driver.driverpic}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n\n    </>\n  )\n}\n\n\nconst Driverrequest=() =>{\n\n//  const totaldriverdetails = useSelector((state)=> state.driverlist.totaldriverdetails)\n//  const singledrivertotaldetails = useSelector((state)=> state.driverlist.singledrivertotaldetails)\n//  const driverlistLoading = useSelector((state) => state.driverlist.isLoading);\n\n  const dispatch = useDispatch();\n  const clickHandler = (drivername) => () => {\n    dispatch(updateDrivertotaldetails(drivername));\n  };\n\n\n  return (\n        <div className=\"totalrequestcontainer\">\n           <h4>Requests</h4>\n          \n        </div>\n    )\n}\n\nexport default Driverrequest\n\n/*\n  <div className=\"driverrequesttable\">\n            <h4>Requests</h4>\n            {driverlistLoading ? (\n                <Loading/>\n            ) : (\n               <DriverTable\n                  onClick={clickHandler}\n                  className=\"alternate-table-color mx-auto\"\n                  data ={totaldriverdetails}/>\n            )}\n            </div>\n            <div className=\"singledrivertotaldetails\">\n               <h4>Driver Details</h4>\n               <DriverDetaillist\n                className=\"alternate-table-color mx-auto\"\n                driver={singledrivertotaldetails}\n              />\n            </div>\n*/","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport IndexMap from \"../components/indexMap\";\nimport Header from \"../components/headerComponent\";\nimport HospitalDetails from \"../components/hospitalDetails\";\nimport DriversList from \"../components/driversList\";\nimport RideDetail from \"../components/rideDetail\";\nimport PatientTable from \"../components/patientTable\";\nimport Driverform from \"../components/driverform\"\n\nimport { updateDriverInfo, fetchDrivers } from \"../store/Drivers\";\nimport { fetchPastRides, updatePastRideDetails } from \"../store/PastRides\";\nimport Loading from \"../components/loading\";\nimport auth from \"../services/authService\";\nimport Driverrequest from \"../components/driverrequest/Driverrequest\";\n\nconst Profile = () => {\n  \n  const [profiletable, setprofiletable] = useState(\"yesdisplay\")\n  const [requesttable, setrequesttable] = useState(\"nodisplay\")\n  const [adddrivertable, setadddrivertable] = useState(\"nodisplay\")\n\n\n  const dispatch = useDispatch();\n  const numberOfDrivers = useSelector(\n    (state) => state.drivers.driverDetails.length\n  );\n  let hospitalDetails = useSelector((state) => state.hospital.hospitalDetails); //Replace 1 with hospital ID\n  hospitalDetails = {\n    ...hospitalDetails,\n    subType: \"Hos1\",\n    reqUsed: 25,\n    subExpiry: \"10 Aug 2020\",\n    numberOfDrivers,\n  };\n  const driverLoading = useSelector((state) => state.drivers.isLoading);\n  const pastRideLoading = useSelector((state) => state.pastRides.isLoading);\n  const registeredDrivers = useSelector((state) => state.drivers.driverDetails);\n  const rideDetails = useSelector((state) => state.pastRides.rideDetails);\n\n  const driverInfo = useSelector((state) => state.drivers.driverInfo);\n\n  const patientData = useSelector((state) => state.pastRides.rides);\n \n  useEffect(() => {\n    const user = auth.getCurrentUser();\n    dispatch(fetchPastRides(user));\n    dispatch(fetchDrivers(user));\n  }, []);\n  const clickHandler = (patientId) => () => {\n    dispatch(updatePastRideDetails(patientId));\n  };\n\n  return (\n    <>\n      <div className=\"dark-screen pb-5\">\n        <Header />\n        <div className=\"app-container mb-5\">\n          <div className=\"img-fluid\">\n            <HospitalDetails hospital={hospitalDetails} />\n            <div className=\"row pt-5\">\n              <div className=\"col-md-1 col-lg-1 mt-5\"></div>\n              <div className=\"col-md-11 col-lg-3 mt-5\">\n                <h3 className=\"mb-3\">Registered Drivers</h3>\n                {driverLoading ? (\n                  <Loading />\n                ) : (\n                  <DriversList\n                    onClick={(driverId) => () =>\n                      dispatch(updateDriverInfo(driverId))}\n                    className=\"reg-driver\"\n                    list={registeredDrivers}\n                  />\n                )}\n              </div>\n              <div className=\"col-md-12 col-lg-3 mt-5\">\n                <h3 className=\"mb-3\">Driver Info</h3>\n                <h4>{driverInfo.name}</h4>\n                <p>Contact&nbsp;&nbsp;&nbsp;&nbsp; : {driverInfo.mobileNo}</p>\n              </div>\n              <div className=\"col-md-12 col-lg-3 mt-5\">\n                <img\n                  className=\"img-fluid driverL\"\n                  alt=\"work\"\n                  src={driverInfo.driverL}\n                />\n              </div>\n              <div className=\"col-md-12 col-lg-2 mt-5\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    \n      <div className=\"light-screen\">\n<div className=\"profiletabbuttons\">\n       <button \n          onClick={()=>{\n         setprofiletable(\"yesdisplay\")\n         setrequesttable(\"nodisplay\")\n         setadddrivertable(\"nodisplay\")\n            }}\n         className=\"bg-secondary text-center text-light mr-1 btn-sm\"\n         style={{ width: '10%', borderRadius: '0' }} >\n            Past Rides\n       </button>\n       <button \n          onClick={()=>{\n         setprofiletable(\"nodisplay\")\n         setrequesttable(\"yesdisplay\")\n         setadddrivertable(\"nodisplay\")\n            }}\n         className=\"bg-secondary text-center text-light mr-1 btn-sm\"\n         style={{ width: '10%', borderRadius: '0' }} >\n            Requests\n       </button>\n       <button \n          onClick={()=>{\n         setprofiletable(\"nodisplay\")\n         setrequesttable(\"nodisplay\")\n         setadddrivertable(\"yesdisplay\")\n            }}\n         className=\"bg-secondary text-center text-light mr-1 btn-sm\"\n         style={{ width: '10%', borderRadius: '0' }} >\n           Add Drivers\n       </button>\n       </div>\n\n      <div className={profiletable}>\n        <div className=\"app-container past-rides mt-4\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h4 className=\"mb-4\">Past Rides</h4>\n            </div>\n          </div>\n\n          <div className=\"row mb-5 pb-5\">\n            <div className=\"col-md-12 col-lg-9\">\n              <IndexMap mapvh=\"60vh\" />\n            </div>\n            <div className=\"col-md-12 col-lg-3 profileRideDet\">\n              <h5 className=\"text-center mb-4\">Ride Details</h5>\n              <RideDetail\n                className=\"alternate-table-color mx-auto\"\n                ride={rideDetails}\n              />\n            </div>\n          </div>\n          <div className=\"row mt-5 mb-5\">\n            <div className=\"col-md-1\"></div>\n            <div className=\"col-md-12\">\n              {pastRideLoading ? (\n                <Loading />\n              ) : (\n                <PatientTable\n                  onClick={clickHandler}\n                  className=\"alternate-table-color mx-auto\"\n                  data={patientData}\n                />\n              )}\n            </div>\n            <div className=\"col-lg-1 .d-md-none\"></div>\n          </div>\n        </div>\n        </div>\n\n      <div className={requesttable}>\n       <Driverrequest/>\n      </div>\n\n      <div className={adddrivertable}>\n      <Driverform/>\n      </div>\n\n\n\n\n\n\n\n      </div>\n\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-lg-4 px-0\">\n          <h1>Priority Pulse</h1>\n        </div>\n        <div className=\"col-sm-12 col-lg-5 footer-contact\">\n          <h3>Contact</h3>\n          <ul>\n            <li>Nithish</li>\n            <li>Kiran</li>\n            <li>Sudeep</li>\n            <li>Harish</li>\n          </ul>\n        </div>\n        <div className=\"col-sm-12 col-lg-3\">\n          <h3>Email</h3>\n          <p>prioritypulse@gmail.com</p>\n          <ul>\n            <li>\n              <a\n                href=\"localhost:3000\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"social-icon\" alt=\"Twitter\" class=\"fab fa-twitter-square\"></i>\n              \n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.linkedin.com/company/priority-pulse-pvt/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"social-icon\" alt=\"LinkedIn\" class=\"fab fa-linkedin\" />\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.facebook.com/PriorityPulse\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"social-icon\" alt=\"Facebook\" class=\"fab fa-facebook-square\"/>\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.instagram.com/priority_pulse/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"social-icon\" alt=\"Instagram\"class=\"fab fa-instagram\" />\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"copyright\">\n          <p>&#169; 2020 All Rights Reserved</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Input from \"./input\";\n\nconst LoginForm = ({ onSubmit, user, onChangeInput, className }) => {\n  return (\n    <div className={`patientForm pb-4 pt-3 px-4 ${className}`}>\n      <h1 className=\"mb-1\">Sign In</h1>\n      <p>Login with Google Credentials</p>\n      <form className=\"mt-5 mb-2\" onSubmit={onSubmit}>\n        <Input\n          name=\"email\"\n          value={user.email}\n          placeholder=\"Hospital Email\"\n          onChange={onChangeInput}\n          type=\"text\"\n          required\n        />\n        <Input\n          name=\"password\"\n          value={user.password}\n          placeholder=\"Password\"\n          onChange={onChangeInput}\n          type=\"password\"\n          required\n        />\n\n        <button type=\"submit\" className=\"button\">\n          Login\n        </button>\n        <div className=\"row ml-0\">\n          <div className=\"form-check text-left col\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"keepMeLoggedIn\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"keepMeLoggedIn\">\n              <p>Keep me Logged in</p>\n            </label>\n          </div>\n          <div className=\"col text-right\">\n            <p>Forgot Password?</p>\n          </div>\n        </div>\n      </form>\n\n      <Link to=\"/register\">\n        <button type=\"submit\" className=\"button mt-4\">\n          Register\n        </button>\n      </Link>\n\n      <p className=\"m-0\">Create new account</p>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nimport LoginForm from \"../components/loginForm\";\nimport Header from \"../components/headerComponent\";\nimport IndexMap from \"../components/indexMap\";\nimport { loginToHospital } from \"../store/Hospitals\";\nimport { useDispatch } from \"react-redux\";\n\nimport user1 from \"../assets/images/hospital.JPG\"\nimport user2 from \"../assets/images/hostrack.JPG\"\nimport hoslogin from \"../assets/images/hoslogin.JPG\"\nimport userabout from \"../assets/images/userabout.JPG\"\n\nimport \"./homepage.css\"\n\n\nconst userData =[\n  {\n      icon :<i  class=\"fas fa-location\" style={{color:\"#343BFC\"}}></i>,\n      title: \"Book and track from anyplace\",\n      desc:\"You will have the command over ambulances and will be globally seen. \",\n  },\n  {\n      icon :<i class=\"fas fa-video\"  style={{color:\"#B2C248\"}}></i>,\n      title: \"Live feed to hospital and doctor\",\n      desc:\"Doctors can get live feed from the ambulance and prepare for premedication.\",\n  },\n  {\n      icon :<i class=\"fas fa-hospital\"  style={{color:\"#E55B3C\"}}></i>,\n      title: \"Premedication\",\n      desc:\"Hospitals can prepare for premedication as doctors know the whole situation.\",\n  },\n  {\n      icon :<i class=\"fas fa-calendar-plus\" style={{color:\"#00ff00\"}}></i>,\n      title: \"First to Market\",\n      desc:\"We are first to introduce the traffic access technology, collaboration with government. \",\n  },{\n      icon :<i  class=\"fas fa-users-cog\" style={{color:\"#C0C0C0\"}}></i>,\n      title: \"Command over Ambulance\",\n      desc:\"Hospital authority can assign drivers and command over ambulance. \",\n  },\n  {\n      icon :<i class=\"fas fa-hands-helping\" style={{color:\"#808000\"}}></i>,\n      title: \"Trust\",\n      desc:\"People get trust as they have every thing that a hospital authority can give.\",\n  },\n  {\n      icon :<i class=\"fas fa-chart-bar\"  style={{color:\"green\"}}></i>,\n      title: \"Competition\",\n      desc:\"As we have a national connections, you can get publicity by all means.\",\n  },\n  {\n      icon :<i class=\"fas fa-tachometer-alt\" style={{color:\"#FFA500\"}}></i>,\n      title: \"Success Rate\",\n      desc:\"As you will be increasing patient survival, there will be success in saving lifes.\",\n  },\n]\n\n\nconst hoshowData =[\n  {\n      color :\"#343BFC\",\n      title : \"Booking and track ambulance\",\n      desc : \"Hospital authority can give and confirm booking by filling data and assigning the driver.\"\n       \n  },\n  { color :\"#B2C248\",\n      title : \"Live Feed\",\n      desc : \"Doctors can get a live feed from the paitent and respond accordingly\"\n  },  \n  {  color :\"#E55B3C\",\n      title : \"Premedication\",\n      desc : \"Authority can make arrangements as doctor could know whole situation of the case.\"\n  },\n  { color :\"#00ff00\",\n      title : \"Manage Ambulance drivers\",\n      desc : \"Can assign, add, manage ambulance drivers and know each rides they make. \"\n  },\n  { color :\"#808000\",\n      title : \"Requesting traffic control to give access of traffic light\",\n      desc : \"Hospital authority can request traffic control to change traffic lights according to the ride \"\n  },\n]\n\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    password: \"\",\n    email: \"\",\n  });\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginToHospital(user));\n    //console.log(user);\n  };\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setUser((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <div className=\"dark-screen pb-3\">\n        <Header />\n        <div className=\"app-container mb-5\">\n          <LoginForm\n            className=\"mx-auto mt-5\"\n            onSubmit={handleSubmit}\n            user={user}\n            onChangeInput={handleChange}\n          />\n        </div>\n        <div className=\"text-center mt-5 mb-5 pt-5\">\n          <p>&#169; 2020 All Rights Reserve</p>\n        </div>\n      </div>\n      <div className=\"light-screen how-work\">\n      <div className=\"hoshowcontainer\">\n<div className=\"hoscoln1\" >\n<div className=\"workheading\">\nHow it Works ?\n    </div>\n            <div className=\"hoscol1inside\">\n            {hoshowData.map((item, index)=>{\n                     return(\n                         <div className=\"hoshowData\" key=\"index\">\n                           <div style={{color: `${item.color}`}}  className=\"Titleh\" >{item.title}</div>\n                           <div className=\"Desch\">{item.desc}</div>\n                         </div>\n                     )\n                 })}  \n             \n                \n            </div>\n            </div>\n            \n            <div className=\"hoscoln2\">\n            <div className=\"slider\">\n                  \n                  <div className=\"images\">\n                  <input type=\"radio\" name=\"slide\" id=\"img1\"  />\n                  <input type=\"radio\" name=\"slide\" id=\"img2\" />\n                  <input type=\"radio\" name=\"slide\" id=\"img3\" />\n                  <input type=\"radio\" name=\"slide\" id=\"img4\" />\n                  \n                  <img className=\"m1 first\" src={hoslogin} alt=\"img1\"  />\n                  <img className=\"m1\" src={user1} alt=\"img2\" />\n                  <img className=\"m1\" src={user2} alt=\"img3\" />\n                  <img className=\"m1\" src={userabout} alt=\"img4\" />\n                  \n                  \n                  \n                       </div>\n                       <div className=\"dots\">\n                  <label for=\"img1\"></label>\n                  <label for=\"img2\"></label>\n                  <label for=\"img3\"></label>\n                  <label for=\"img4\"></label>\n                       </div>\n                   \n                  </div>  \n            </div>\n\n</div>\n\n      <div className=\"colcolumn1\">\n   <div className=\"colpheading\">\n  Perks \n       </div>\n       <div className=\"colWrapper\">     \n   {userData.map((item, index)=>{\n                        return(\n                            <div className=\"StatsBox\" key=\"index\">\n                              <div className=\"Icon\">{item.icon}</div>\n                              <div className=\"Title\">{item.title}</div>\n                              <div className=\"Desc\">{item.desc}</div>\n                            </div>\n                        )\n                    })}  \n                     </div>      \n   </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Input from \"./input\";\n\nconst LoginForm = ({ onSubmit, user, onChangeInput, className }) => {\n  return (\n    <div className={`patientForm pb-4 pt-3 px-4 ${className}`}>\n      <h1 className=\"mb-1\">Register</h1>\n      <p>Register with Google Credentials</p>\n      <form className=\"mt-5 mb-2\" onSubmit={onSubmit}>\n        <Input\n          name=\"code\"\n          value={user.code}\n          placeholder=\"Hospital Code\"\n          onChange={onChangeInput}\n          type=\"text\"\n          required\n        />\n        <Input\n          name=\"password\"\n          value={user.password}\n          placeholder=\"Password\"\n          onChange={onChangeInput}\n          type=\"password\"\n          required\n        />\n        <Input\n          name=\"name\"\n          value={user.name}\n          placeholder=\"Hospital Name\"\n          onChange={onChangeInput}\n          type=\"text\"\n          required\n        />\n        <Input\n          name=\"address\"\n          value={user.address}\n          placeholder=\"Hospital Area\"\n          onChange={onChangeInput}\n          type=\"text\"\n          required\n        />\n        <Input\n          name=\"hospitalNumbers\"\n          value={user.hospitalNumbers}\n          placeholder=\"Hospital Phone\"\n          onChange={onChangeInput}\n          type=\"tel\"\n          required\n        />\n        <Input\n          name=\"email\"\n          value={user.email}\n          placeholder=\"Email\"\n          onChange={onChangeInput}\n          type=\"email\"\n          required\n        />\n\n        <button type=\"submit\" className=\"button\">\n          Register\n        </button>\n        <Link to=\"/login\">\n          <p>Already have an account? Login</p>\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nimport RegisterForm from \"../components/registerUserForm\";\nimport Header from \"../components/headerComponent\";\nimport IndexMap from \"../components/indexMap\";\nimport { registerHospital } from \"../store/Hospitals\";\nimport { useDispatch } from \"react-redux\";\n\nimport connecting from \"../assets/images/connecting.JPG\"\n\n\nconst Register = (props) => {\n  const [registerUser, setRegisterUser] = useState({\n    code: \"\",\n    password: \"\",\n    name: \"\",\n    address: \"\",\n    hospitalNumbers: \"\",\n    email: \"\",\n    hospitalLocation: {\n      coordinates: [\n        12.24, //longitude\n        34.38889, //latitude\n      ],\n    },\n  });\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(registerHospital(registerUser));\n  };\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setRegisterUser((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <div className=\"dark-screen pb-3\">\n        <Header />\n        <div className=\"app-container mb-5\">\n          <RegisterForm\n            className=\"mx-auto\"\n            onSubmit={handleSubmit}\n            user={registerUser}\n            onChangeInput={handleChange}\n          />\n        </div>\n        <div className=\"text-center mt-5 mb-5 pt-5\">\n          <p>&#169; 2020 All Rights Reserve</p>\n        </div>\n      </div>\n      <div className=\"light-screen how-work\">\n        <div className=\"aboutuscontainer\">\n          \n          <div className=\"aboutheading\">\n\n        Our Idea\n          </div>\n          <div className=\"contentwrapper\">\n          <div className=\"coloum1\"> \n          <p>\n              \"We never lack technology, we only lack technology for service\". To change this criteria and to end the social issue of \"Delayed Ambulances\", We - The four innovative minds of IIT BHU came forward with the combination of technical, systematic and emotional solution. The development of hardware devices, user and control room websites & a driver app is the beginning stage of our journey. \"Priority Pulse to Priority Pulse Pvt Ltd\" is one of the most proudest moment. We all began with the question - \"If we can get cab in 5 mins, why not an Ambulance?\" and today we can blissfully say that- \"Now, an ambulance can reach \n           faster than a cab.\"\n          </p>\n          </div>\n          <div className=\"coloum2\">\n          <img className=\"aImages\" src={connecting} />\n          </div>\n          </div>\n         </div>\n      </div>\n    </>\n  );\n};\n\nexport default Register;\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as auth from \"../services/authService\";\nimport { setCurrentUser } from \"../store/Hospitals\";\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.logout();\n    dispatch(setCurrentUser(false));\n    window.location = \"/\";\n  });\n  return null;\n};\n\nexport default Logout;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <>\n      <p>Error 404</p>\n      <p>Page Not Found</p>\n    </>\n  );\n};\n\nexport default NotFound;\n","import { Button, Paper, Table, TableBody, TableCell, TableHead, TableRow, TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Header from '../components/headerComponent'\r\nimport auth from \"../services/authService\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nfunction AdminPanel() {\r\n    const [drivers, setdrivers] = useState([])\r\n    const [penddrivers, setpenddrivers] = useState([])\r\n    const [hospi, sethospi] = useState('')\r\n    useEffect(() => {\r\n        const user = auth.getCurrentUser();\r\n        console.log(user)\r\n        sethospi(user)\r\n    }, [])\r\n    useEffect(() => {\r\n        if(hospi.length){\r\n            fetch(`https://serverprioritypulse.herokuapp.com/driver/code/${hospi}`,{\r\n                method:'get',\r\n                headers:{   \r\n                    \"content-type\": \"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\r\n                }\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                // console.log(result)\r\n                setdrivers(result)\r\n            }).catch(err=>console.log(err))\r\n        }\r\n    }, [hospi])\r\n    useEffect(() => {\r\n        if(hospi.length){\r\n            fetch(`https://serverprioritypulse.herokuapp.com/driver/pendDriver/${hospi}`,{\r\n                method:'get',\r\n                headers:{   \r\n                    \"content-type\": \"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\r\n                }\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                // console.log(result)\r\n                setpenddrivers(result)\r\n            }).catch(err=>console.log(err))\r\n        }\r\n    }, [hospi])\r\n    const datahandler = () =>{\r\n        // fetch('http://localhost:4000/driver/add',{\r\n        //         method:'post',\r\n        //         headers:{\r\n        //         \"content-type\": \"application/json\",\r\n        //         \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\r\n        //     },\r\n        //     body:JSON.stringify({\r\n        //         name:name,\r\n        //         mobileNo:mobileNo,\r\n        //         hospital:hospi,\r\n        //         driverL:imag\r\n        //     })\r\n        // }).then(res=>res.json())\r\n        // .then(result=>{\r\n        //     console.log(result)\r\n        // }).catch(err=>console.log(err))\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"dark-screen\" style={{paddingBottom:'20px'}}>\r\n                <Header />\r\n                <Paper style={{width:'60%',margin:'10px auto',overflow:'auto'}}>\r\n                    <div style={{textAlign:'center',fontWeight:'bolder'}}>Drivers Requests</div>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='center'>Driver Name</TableCell>\r\n                                <TableCell align='center'>Mobile Number</TableCell>\r\n                                <TableCell align='center'></TableCell>\r\n                                <TableCell align='center'></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {penddrivers.map((driver,i)=>(\r\n                                <TableRow key={i}>\r\n                                    <TableCell align='center'>{driver.name}</TableCell>\r\n                                    <TableCell align='center'>{driver.mobileNo}</TableCell>\r\n                                    <TableCell align='center' onClick={()=>{\r\n                                        fetch(`https://serverprioritypulse.herokuapp.com/driver/updateverify/${driver._id}`,{\r\n                                            method:'put',\r\n                                            headers:{\r\n                                                \"content-type\": \"application/json\",\r\n                                                \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\r\n                                            },body:JSON.stringify({value:true})\r\n                                        }).then(res=>res.json())\r\n                                        .then(result=>{\r\n                                            if(result.message){\r\n                                                var da = penddrivers;\r\n                                                da = da.filter(x => x._id!==driver._id)\r\n                                                setpenddrivers(da)\r\n                                            }\r\n                                        }).catch(err=>console.log(err))\r\n                                    }} style={{cursor:'pointer'}}><CheckIcon style={{ color: 'green' }} /></TableCell>\r\n                                    <TableCell align='center' onClick={()=>[\r\n                                        fetch(`https://serverprioritypulse.herokuapp.com/driver/deldriv/${driver._id}`,{\r\n                                            method:'delete',\r\n                                            headers:{\r\n                                                \"content-type\": \"application/json\",\r\n                                                \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\r\n                                            }\r\n                                        }).then(res=>res.json())\r\n                                        .then(resu=>{\r\n                                            if(resu.message){\r\n                                                var pad = penddrivers\r\n                                                pad = pad.filter(x => x._id!==driver._id)\r\n                                                setpenddrivers(pad)\r\n                                            }\r\n                                        }).catch(err =>console.log(err))\r\n                                    ]} style={{cursor:'pointer'}}><DeleteIcon /></TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n                <Paper style={{width:'60%',maxHeight:'400px',overflow:'auto',margin:'0 auto'}}>\r\n                    <div style={{textAlign:'center',fontWeight:'bolder'}}>Drivers List</div>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align='center'>Driver Name</TableCell>\r\n                                <TableCell align='center'>Mobile Number</TableCell>\r\n                                <TableCell align='center'></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {drivers.map((driver,i)=>(\r\n                                <TableRow key={i}>\r\n                                    <TableCell align='center'>{driver.name}</TableCell>\r\n                                    <TableCell align='center'>{driver.mobileNo}</TableCell>\r\n                                    <TableCell align='center' onClick={()=>{\r\n                                        fetch(`https://serverprioritypulse.herokuapp.com/driver/deldriv/${driver._id}`,{\r\n                                            method:'delete',\r\n                                            headers:{\r\n                                                \"content-type\": \"application/json\",\r\n                                                \"Authorization\":\"Bearer \"+localStorage.getItem(\"token\")\r\n                                            }\r\n                                        }).then(res=>res.json())\r\n                                        .then(resu=>{\r\n                                            if(resu.message){\r\n                                                var pad = penddrivers\r\n                                                pad = pad.filter(x => x._id!==driver._id)\r\n                                                setpenddrivers(pad)\r\n                                            }\r\n                                        }).catch(err =>console.log(err))\r\n                                    }} style={{cursor:'pointer'}}><DeleteIcon /></TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminPanel\r\n","import React, { useEffect } from \"react\";\nimport { Route, Redirect, Switch, BrowserRouter, useHistory, useLocation } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Home from \"./screens/HomeScreen\";\nimport ActiveRides from \"./screens/ActiveRidesScreen\";\nimport Profile from \"./screens/ProfileScreen\";\nimport Footer from \"./components/footerComponent\";\nimport Login from \"./screens/LoginScreen\";\nimport Register from \"./screens/RegisterScreen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getLoggedByJWT } from \"./store/Hospitals\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/protectedRoute\";\nimport NotFound from \"./screens/NotFound\";\nimport auth from \"./services/authService\";\nimport AdminPanel from \"./screens/AdminPanel\";\n\nvar userd ;\nvar hosipa ;\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let location = useLocation();\n  useEffect(() => {\n    console.log(location.pathname)\n  }, [location.pathname])\n  useEffect(() => {\n    const user = auth.getCurrentUser();\n    const hospi = JSON.parse(auth.getHosipaRequire());\n    console.log(hospi)\n    userd = user;\n    if (user) {\n      dispatch(getLoggedByJWT(user));\n    }else{\n      history.push('/login')\n    }\n  }, []);\n  const user = useSelector((state) => state.hospital.currentUser);\n  return (\n    <>\n      <main className=\"screen\">\n        <BrowserRouter>\n          {userd && <> <Route \n            path=\"/\" \n            exact\n            render={()=>(\n              userd ? <Redirect to='/home' /> : <Redirect to='/login' />\n            )} />\n            <Route\n            path=\"/home\" \n            exact\n            render={()=>(\n              userd ? <Home /> : <Redirect to='/login' />\n            )} />\n          <Route \n            path=\"/activeRides\" \n            exact\n            render={()=>(\n              userd ? <ActiveRides /> : <Redirect to='/login' />\n            )} />\n          <Route \n            path=\"/activeRides/:id\" \n            exact\n            render={()=>(\n              userd ? <ActiveRides /> : <Redirect to='/login' />\n            )} />\n          <Route \n            path=\"/manageusers\" \n            exact\n            render={()=>(\n              userd ? <AdminPanel /> : <Redirect to='/login' />\n            )} />\n          <Route \n            path=\"/profile\" \n            exact\n            render={()=>(\n              userd ? <Profile /> : <Redirect to='/login' />\n            )} /> </>}\n          <Route\n            path=\"/login\"\n            exact\n            render={() => user ? <Home /> : <Login />}\n          />\n          <Route path=\"/logout\" component={Logout} />\n          <Route\n            path=\"/register\"\n            render={() => {\n              if (user) return <Home />;\n              return <Register />;\n            }}\n          />\n          <Route exact path=\"/notfound\" component={NotFound} />\n        </BrowserRouter>\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./store/configureStore\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = ConfigureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\n\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport HospitalReducer from \"./Hospitals\";\nimport DriverReducer from \"./Drivers\";\nimport ActiveRidesReducer from \"./ActiveRides\";\nimport PastRidesReducer from \"./PastRides\";\nimport PatientReducer from \"./Patient\";\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    combineReducers({\n      patient: PatientReducer,\n      hospital: HospitalReducer,\n      drivers: DriverReducer,\n      activeRides: ActiveRidesReducer,\n      pastRides: PastRidesReducer,\n    }),\n    applyMiddleware(thunk)\n  );\n  return store;\n};\n","module.exports = __webpack_public_path__ + \"static/media/usermarkersvg.ec707128.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospital.75311d66.JPG\";","module.exports = __webpack_public_path__ + \"static/media/hostrack.f13fd28c.JPG\";","module.exports = __webpack_public_path__ + \"static/media/hoslogin.7966e636.JPG\";","module.exports = __webpack_public_path__ + \"static/media/userabout.8f1a999d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Profile.3d9a511a.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulancessvg.bb0f91aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospitalmarkersvg.62313832.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospitalpic.8db1adf3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/connecting.b5409a2a.JPG\";"],"sourceRoot":""}