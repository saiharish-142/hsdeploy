{"version":3,"sources":["components/gMaps.js","services/api.js","store/Hospitals.js","store/Drivers.js","store/ActiveRides.js","store/PastRides.js","store/Patient.js","components/input.js","components/patientDetailForm.js","components/headerComponent.js","components/indexMap.js","components/homeLocation.js","components/loading.js","services/authService.js","screens/HomeScreen.js","components/activeRidesList.js","components/rideDetail.js","screens/ActiveRidesScreen.js","components/hospitalDetails.js","components/driversList.js","components/patientTable.js","screens/ProfileScreen.js","components/footerComponent.js","components/loginForm.js","screens/LoginScreen.js","components/registerUserForm.js","screens/RegisterScreen.js","components/logout.js","components/protectedRoute.js","screens/NotFound.js","App.js","serviceWorker.js","index.js","store/configureStore.js","assets/images/usermarkersvg.svg","assets/images/Profile.png","assets/images/ambulancessvg.svg","assets/images/hospitalmarkersvg.svg","assets/images/hospitalpic.jpg","assets/images/facebook-brands.svg","assets/images/linkedin-brands.svg","assets/images/instagram-square-brands.svg","assets/images/twitter-square-brands.svg"],"names":["map","infoWindow","markers","baseURL","get","url","axios","method","headers","post","data","initialState","hospitalDetails","isLoading","loginErrMsg","regErrMsg","regSuccess","currentUser","loginToHospitalStart","type","loginToHospitalFailed","errmess","payload","loginToHospitalSuccess","drivers","registerHospitalSuccess","registerHospitalFailed","setCurrentUser","HospitalReducer","state","action","driverDetails","driverInfo","errMsg","updateDriverInfo","driverId","fetchDrivers","hospitalId","dispatch","fetchDriversStart","Api","then","fetchDriversSuccess","_id","catch","ex","fetchDriversFailed","response","DriverReducer","find","dr","rideDetails","rides","updateActiveRideDetails","id","fetchActiveRidesStart","fetchActiveRidesFailed","fetchActiveRidesSuccess","activeRides","ActiveRidesReducer","ride","updatePastRideDetails","fetchPastRidesStart","fetchPastRidesFailed","fetchPastRidesSuccess","pastRides","PastRidesReducer","successMsg","isSuccess","userData","addPatientDataStart","addPatientDataFailed","addPatientDataSuccess","mess","PatientReducer","Input","name","value","onChange","placeholder","label","otherProps","className","htmlFor","fu","PatientDetailForm","onSubmit","patientDetail","onChangeInput","driverList","gurdnumber","searchedUser","setlocationuser","useState","users","setusers","foundusers","setfoundusers","useEffect","fetch","res","json","results","console","log","required","age","patientCase","casePrior","patientNo","guardianNo","e","val","i","length","phoneNumber","indexOf","push","se","target","style","maxHeight","overflow","user","key","color","height","cursor","onClick","pickedBy","driver","to","Header","isOpen","setIsOpen","useSelector","hospital","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src","profile","alt","GMap","usersocket","driversocket","dmarker","umarker","props","renderMap","index","window","document","getElementsByTagName","script","createElement","async","defer","parentNode","insertBefore","loadScript","initMap","google","maps","Map","getElementById","center","lat","lng","zoom","InfoWindow","Marker","draggable","icon","usermarkersvg","position","coord","setCenter","input","searchBox","places","SearchBox","addListener","setBounds","getBounds","getPlaces","bounds","LatLngBounds","forEach","place","geometry","Size","Point","viewport","union","extend","location","setPosition","lpos","setState","reverseGeo","fitBounds","setZoom","event","npos","getPosition","LAT","LNG","setUserLocation","prev","area","address_components","long_name","landmark","landmarkStreet","cityState","err","warn","message","previous","pickUplocation","this","mpos","coordinates","handleLocationError","browserHasGeolocation","pos","setContent","open","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","getCenter","mapvh","mapvw","textAlign","myLocation","width","Component","HomeLocation","userLocation","setPatientDetails","Loading","role","logout","localStorage","removeItem","jwt","getItem","jwtDecode","error","Home","history","useHistory","setsearchedUsers","patientDetails","driverLoading","useDispatch","auth","handleChangeGN","num","a","currentTarget","preventDefault","decodePolyline","require","IndexMap","initpolyline","setinitpolyline","setride","polyline","midware","driverLocation","setDriverLocation","io","connect","emit","roomid","on","locationuser","locationdriver","opos","upos","setMap","ambulancesvg","convrter","initMap1","pol","pathCoordinates","pathlength","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","hospitalmarkersvg","ActiveRidesList","list","cx","cy","r","strokeWidth","fill","signalColor","RideDetail","mobileNo","pcase","address","ActiveRides","activeRidesLoading","patientId","HospitalDetails","hospitalImage","code","numberOfDrivers","subType","reqUsed","subExpiry","rating","DriversList","PatientTable","minWidth","patient","timestamp","x","Date","getHours","getMinutes","getDate","getMonth","getFullYear","DateTime","createdAt","Profile","pastRideLoading","registeredDrivers","patientData","driverL","Footer","href","rel","twitLogo","lnkdLogo","fbLogo","instLogo","LoginForm","password","Login","setUser","loginData","setItem","token","hospitalNumbers","email","Register","hospitalLocation","registerUser","setRegisterUser","regData","Logout","ProtectedRoute","component","render","rest","NotFound","App","hos","from","exact","Boolean","hostname","match","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.062b123b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Input from \"./input\"; \r\nimport usermarkersvg from \"../assets/images/usermarkersvg.svg\"\r\n //import { ReverseGeo } from \"./reverseGeo\";\r\n//import \"./App.css\";\r\n//import maptheme from \"./maptheme\";\r\n/*\r\n//decoder for the string that we get from app so that we can decode the string and convert into array of lat,lng\r\nconst decodePolyline = require(\"decode-google-map-polyline\");\r\nvar polyline2 =\r\n  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\";\r\nvar pathCoordinates = decodePolyline(polyline2);\r\n*/\r\nlet map, infoWindow,markers,mpos;\r\n//class starts\r\n\r\nclass GMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      coord: {\r\n        lat: null,\r\n        lng: null,\r\n      }\r\n     \r\n    };\r\n  }\r\n\r\n  componentDidUpdate(previous){\r\n  //  console.log(previous)\r\n  if(previous.patientDetail.pickUplocation !== this.props.patientDetail.pickUplocation){\r\n    this.renderMap();\r\n    const mpos ={\r\n      lat : this.props.patientDetail.pickUplocation.coordinates[0],\r\n      lng : this.props.patientDetail.pickUplocation.coordinates[1],\r\n    }\r\n \r\n    this.setState({coord : mpos},()=>{\r\n      if(this.state.coord.lat && this.state.coord.lng){\r\n      \r\n        this.reverseGeo()\r\n       \r\n    }})\r\n    \r\n  \r\n    console.log(mpos,\"update\")\r\n  }\r\n \r\n  }\r\n  componentDidMount() {\r\n    this.renderMap();\r\n    const mpos ={\r\n      lat : this.props.patientDetail.pickUplocation.coordinates[0],\r\n      lng : this.props.patientDetail.pickUplocation.coordinates[1],\r\n    }\r\n  \r\n    this.setState({coord : mpos})\r\n  \r\n    console.log(mpos,\"mount\")\r\n   \r\n  }\r\n\r\n  renderMap = () => {\r\n    loadScript(\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyATwnp3e3ZL7__Oskpdo8Gutgls6ir4FeU&libraries=places&callback=initMap\"\r\n    );\r\n    window.initMap = this.initMap;\r\n  };\r\n  // api AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\r\n  \r\n  //own AIzaSyATwnp3e3ZL7__Oskpdo8Gutgls6ir4FeU\r\n\r\n  //initialization of maps\r\n  initMap = () => {\r\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      center: { lat: 25.27794, lng: 83.00244 },\r\n      zoom: 15,\r\n    });\r\n\r\n    //get user location see below image1 we get the data like\r\n    infoWindow = new window.google.maps.InfoWindow(); // Try HTML5 geolocation.\r\n  //marker \r\n\r\nmarkers = new window.google.maps.Marker({\r\n  map,\r\ndraggable:true,\r\nicon: usermarkersvg,\r\n  position: this.state.coord\r\n})\r\nmap.setCenter(this.state.coord)\r\n\r\n\r\n\r\n//markers.setPosition(mpos)\r\n       //search bar start\r\n\r\n       const input = document.getElementById(\"mapsearch\");\r\n      if(input){\r\n             const searchBox = new window.google.maps.places.SearchBox(input);\r\n       // map.controls[window.google.maps.ControlPosition.TOP_LEFT].push(input);\r\n       // Bias the SearchBox results towards current map's viewport.\r\n       map.addListener(\"bounds_changed\", () => {\r\n         searchBox.setBounds(map.getBounds());\r\n       });\r\n   //    let markers = [];\r\n       // Listen for the event fired when the user selects a prediction and retrieve\r\n       // more details for that place.\r\n       searchBox.addListener(\"places_changed\", () => {\r\n         const places = searchBox.getPlaces();\r\n   \r\n         if (places.length == 0) {\r\n           return;\r\n         }\r\n    /*    // Clear out the old markers.       //clar\r\n         markers.forEach((marker) => {\r\n           marker.setMap(null);\r\n         });\r\n         markers = []; */\r\n         \r\n         // For each place, get the icon, name and location.\r\n         const bounds = new window.google.maps.LatLngBounds();\r\n         places.forEach((place) => {\r\n           if (!place.geometry) {\r\n             console.log(\"Returned place contains no geometry\");\r\n             return;\r\n           }\r\n           const icon = {\r\n             url: place.icon,\r\n             size: new window.google.maps.Size(71, 71),\r\n             origin: new window.google.maps.Point(0, 0),\r\n             anchor: new window.google.maps.Point(17, 34),\r\n             scaledSize: new window.google.maps.Size(25, 25),\r\n           };\r\n           // Create a marker for each place.\r\n          \r\n     /*     markers.push(       ///clear\r\n            new window.google.maps.Marker({\r\n              map,\r\n              icon,\r\n              title: place.name,\r\n              draggable :true,\r\n              position: place.geometry.location,\r\n            })\r\n          ); */\r\n           if (place.geometry.viewport) {\r\n             // Only geocodes have viewport.\r\n             bounds.union(place.geometry.viewport);\r\n           } else {\r\n             bounds.extend(place.geometry.location);\r\n            \r\n           }\r\n           \r\n           markers.setPosition( place.geometry.location)\r\n           map.setCenter(place.geometry.location)\r\n\r\n           var lpos ={\r\n            lat : place.geometry.location.lat(),\r\n           lng : place.geometry.location.lng()\r\n      }\r\n\r\n           this.setState({coord : lpos},()=>{\r\n            this.reverseGeo()\r\n            map.setCenter(lpos)\r\n          })\r\n          \r\n         });\r\n         map.fitBounds(bounds);\r\n         map.setZoom(12);\r\n       \r\n\r\n       });\r\n       //searchbox end\r\n      } \r\n     //geocoding\r\n\r\n    const geocode= new window.google.maps.event.addListener(markers,\"dragend\",(event)=>{\r\n      console.log(\"iam dragged\");\r\n      var lat,lng;\r\nvar npos ={\r\n      lat : markers.getPosition().lat(),\r\n     lng : markers.getPosition().lng()\r\n}\r\n    this.setState({coord : npos},()=>{\r\n      this.reverseGeo()\r\n      map.setCenter(npos)\r\n    })\r\n  // console.log(this.state.coord.lat) \r\n  })\r\n\r\n  };\r\n\r\n\r\n  reverseGeo = () => {\r\n    const KEY = \"AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\";\r\n    const LAT = this.state.coord.lat;\r\n    const LNG = this.state.coord.lng;\r\n    let url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${LAT},${LNG}&key=${KEY}`;\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        this.props.setUserLocation((prev) => ({\r\n          ...prev,\r\n          area: data.results[0].address_components[0].long_name ? data.results[0].address_components[0].long_name : \"\",\r\n          landmark: data.results[0].address_components[1].long_name ? data.results[0].address_components[1].long_name : \"\",\r\n          landmarkStreet: data.results[0].address_components[2].long_name ? data.results[0].address_components[2].long_name: \"\",\r\n          cityState: `${data.results[0].address_components[3] ? data.results[0].address_components[3].long_name : \"\"}, ${data.results[0].address_components[4] ? data.results[0].address_components[4].long_name : \"\"}`,\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.warn(err.message);\r\n      });\r\n  };\r\n\r\n\r\n\r\nasync myLocation(e){\r\n // console.log(\"iam clicked\")\r\n   \r\n  const handleLocationError = (browserHasGeolocation, infoWindow, pos) => {\r\n    infoWindow.setPosition(pos);\r\n    infoWindow.setContent(\r\n      browserHasGeolocation\r\n        ? \"Error: The Geolocation service failed.\"\r\n        : \"Error: Your browser doesn't support geolocation.\"\r\n    );\r\n    infoWindow.open(map);\r\n  };\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const pos = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        };\r\n        //console.log(position);\r\n        this.setState({ coord: pos }, () => {\r\n          //ReverseGeo(this.state.coord.lat, this.state.coord.lng);\r\n          this.reverseGeo();\r\n        });\r\n      //  infoWindow.setPosition(pos);\r\n        markers.setPosition(pos)\r\n      //  infoWindow.setContent(\"Location found.\");\r\n        infoWindow.open(map);\r\n        map.setCenter(pos);\r\n      \r\n      },\r\n  \r\n \r\n      () => {\r\n        handleLocationError(true, infoWindow, map.getCenter());\r\n      }\r\n    );\r\n  } else {\r\n    // Browser doesn't support Geolocation\r\n    handleLocationError(false, infoWindow, map.getCenter());\r\n  } \r\n \r\n  }\r\n  // end reverse geocoding\r\n  render() {\r\n    const { mapvh, mapvw } = this.props;\r\n//console.log(this.props.patientDetail.pickUplocation.coordinates[0])\r\n\r\n    return (\r\n      <main>\r\n         <div className=\"row\">\r\n          <div className=\"col-md-12 col-lg-9 pr-0\">\r\n            <Input\r\n            id =\"mapsearch\"\r\n              name=\"nearByHospital\"\r\n              placeholder=\"Search\"\r\n              //value=\"nearByHospital\"\r\n              type=\"text\"\r\n              style={{ textAlign: \"center\" }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-3\">\r\n            <button onClick={(e)=>this.myLocation()} type=\"submit\" className=\"button myLocationBtn\">\r\n              My Location\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div style={{ width: mapvw, height: mapvh }} id=\"map\"></div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\nfunction loadScript(url) {\r\n  var index = window.document.getElementsByTagName(\"script\")[0];\r\n  var script = window.document.createElement(\"script\");\r\n  script.src = url;\r\n  script.async = true;\r\n  script.defer = true;\r\n  index.parentNode.insertBefore(script, index);\r\n}\r\n\r\nexport default GMap;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://serverprioritypulse.herokuapp.com\";\r\n\r\nexport const get = (url) =>\r\n  axios({\r\n    method: \"get\",\r\n    baseURL,\r\n    url,\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  });\r\n\r\nexport const post = (url, data) =>\r\n  axios({\r\n    method: \"post\",\r\n    baseURL,\r\n    url,\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    data,\r\n  });\r\n","import * as Api from \"../services/api\";\r\n\r\nconst initialState = {\r\n  hospitalDetails: {},\r\n  isLoading: false,\r\n  loginErrMsg: null,\r\n  regErrMsg: null,\r\n  regSuccess: false,\r\n  currentUser: false,\r\n};\r\n\r\n// ACTION TYPES\r\nconst SET_CURRENTUSER = \"SET_CURRENTUSER\";\r\n\r\nconst LOGIN_HOSPITAL_BEGAN = \"LOGIN_HOSPITAL_BEGAN\";\r\nconst LOGIN_HOSPITAL_FAILED = \"LOGIN_HOSPITAL_FAILED\";\r\nconst LOGIN_HOSPITAL_SUCCESS = \"LOGIN_HOSPITAL_SUCCESS\";\r\n\r\nconst REGISTER_HOSPITAL_FAILED = \"REGISTER_HOSPITAL_FAILED\";\r\nconst REGISTER_HOSPITAL_SUCCESS = \"REGISTER_HOSPITAL_SUCCESS\";\r\n\r\n// ACTION CREATORS\r\nexport const getLoggedByJWT = (hospitalId) => (dispatch) => {\r\n  dispatch(loginToHospitalStart());\r\n  Api.get(\"/hospital/\")\r\n    .then((response) => {\r\n      dispatch(\r\n        loginToHospitalSuccess(\r\n          response.data.find((hos) => hos._id === hospitalId)\r\n        )\r\n      );\r\n      dispatch(setCurrentUser(true));\r\n    })\r\n    .catch((ex) => {\r\n      dispatch(loginToHospitalFailed(ex.response.data.error));\r\n    });\r\n};\r\n\r\nexport const loginToHospital = (loginData) => (dispatch) => {\r\n  dispatch(loginToHospitalStart());\r\n  Api.post(\"/hospital/signin\", loginData)\r\n    .then((response) => {\r\n      dispatch(loginToHospitalSuccess(response.data.hospital));\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      dispatch(setCurrentUser(true));\r\n      window.location = \"/\";\r\n    })\r\n    .catch((ex) => {\r\n      dispatch(loginToHospitalFailed(ex.response.data.error));\r\n    });\r\n};\r\n\r\nexport const loginToHospitalStart = () => ({\r\n  type: LOGIN_HOSPITAL_BEGAN,\r\n});\r\n\r\nexport const loginToHospitalFailed = (errmess) => ({\r\n  type: LOGIN_HOSPITAL_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const loginToHospitalSuccess = (drivers) => ({\r\n  type: LOGIN_HOSPITAL_SUCCESS,\r\n  payload: drivers,\r\n});\r\n\r\nexport const registerHospital = (regData) => (dispatch) => {\r\n  Api.post(\"/hospital/signup\", regData)\r\n    .then((response) => {\r\n      dispatch(registerHospitalSuccess());\r\n      window.location = \"/\";\r\n    })\r\n    .catch((ex) => {\r\n      dispatch(registerHospitalFailed(ex.response.data.error));\r\n    });\r\n};\r\n\r\nexport const registerHospitalSuccess = () => ({\r\n  type: REGISTER_HOSPITAL_SUCCESS,\r\n});\r\n\r\nexport const registerHospitalFailed = (errmess) => ({\r\n  type: REGISTER_HOSPITAL_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const setCurrentUser = (currentUser) => ({\r\n  type: SET_CURRENTUSER,\r\n  payload: currentUser,\r\n});\r\n\r\n// REDUCER\r\nconst HospitalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_HOSPITAL_BEGAN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        loginErrMsg: null,\r\n        regSuccess: false,\r\n      };\r\n    case LOGIN_HOSPITAL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loginErrMsg: null,\r\n        hospitalDetails: action.payload,\r\n      };\r\n    case LOGIN_HOSPITAL_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loginErrMsg: action.payload,\r\n      };\r\n    case REGISTER_HOSPITAL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        regErrMsg: null,\r\n        regSuccess: true,\r\n      };\r\n    case REGISTER_HOSPITAL_FAILED:\r\n      return {\r\n        ...state,\r\n        regErrMsg: action.payload,\r\n        regSuccess: false,\r\n      };\r\n    case SET_CURRENTUSER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default HospitalReducer;\r\n\r\n//SELECTOR\r\n\r\nexport const getHospitalId = (state) => state.hospitalDetails._id;\r\n","import * as Api from \"../services/api\";\r\n\r\nconst initialState = {\r\n  driverDetails: [],\r\n  driverInfo: {},\r\n  isLoading: false,\r\n  errMsg: null,\r\n};\r\n\r\n// ACTION TYPES\r\nconst UPDATE_DRIVERINFO = \"UPDATE_DRIVERINFO\";\r\nconst GET_DRIVERS_BEGAN = \"GET_DRIVERS_BEGAN\";\r\nconst GET_DRIVERS_FAILED = \"GET_DRIVERS_FAILED\";\r\nconst GET_DRIVERS_SUCCESS = \"GET_DRIVERS_SUCCESS\";\r\n\r\n// ACTION CREATORS\r\nexport const updateDriverInfo = (driverId) => ({\r\n  type: UPDATE_DRIVERINFO,\r\n  payload: driverId,\r\n});\r\n\r\nexport const fetchDrivers = (hospitalId) => (dispatch) => {\r\n  dispatch(fetchDriversStart());\r\n  Api.get(`/hospital/Hdrivers/${hospitalId}`)\r\n    .then((data) => {\r\n      dispatch(fetchDriversSuccess(data.data));\r\n      dispatch(updateDriverInfo(data.data[0]._id));\r\n    })\r\n    .catch((ex) => dispatch(fetchDriversFailed(ex.response.data)));\r\n};\r\n\r\nexport const fetchDriversStart = () => ({\r\n  type: GET_DRIVERS_BEGAN,\r\n});\r\n\r\nexport const fetchDriversFailed = (errmess) => ({\r\n  type: GET_DRIVERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const fetchDriversSuccess = (drivers) => ({\r\n  type: GET_DRIVERS_SUCCESS,\r\n  payload: drivers,\r\n});\r\n\r\n// REDUCER\r\nconst DriverReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_DRIVERINFO:\r\n      return {\r\n        ...state,\r\n        driverInfo: state.driverDetails.find((dr) => dr._id === action.payload),\r\n      };\r\n    case GET_DRIVERS_BEGAN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errMsg: null,\r\n      };\r\n    case GET_DRIVERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: null,\r\n        driverDetails: action.payload,\r\n      };\r\n    case GET_DRIVERS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default DriverReducer;\r\n","import * as Api from \"../services/api\";\r\n\r\nconst initialState = {\r\n  rideDetails: {},\r\n  rides: [],\r\n  isLoading: false,\r\n  errMsg: null,\r\n};\r\n\r\n// ACTION TYPES\r\nconst UPDATE_ACTIVERIDEDETAILS = \"UPDATE_ACTIVERIDEDETAILS\";\r\n\r\nconst GET_ACTIVERIDES_BEGAN = \"GET_ACTIVERIDES_BEGAN\";\r\nconst GET_ACTIVERIDES_FAILED = \"GET_ACTIVERIDES_FAILED\";\r\nconst GET_ACTIVERIDES_SUCCESS = \"GET_ACTIVERIDES_SUCCESS\";\r\n\r\n// ACTION CREATORS\r\nexport const updateActiveRideDetails = (id) => ({\r\n  type: UPDATE_ACTIVERIDEDETAILS,\r\n  payload: id,\r\n});\r\n\r\nexport const fetchActiveRides = (hospitalId) => (dispatch) => {\r\n  dispatch(fetchActiveRidesStart());\r\n  Api.get(`hospital/activerides/${hospitalId}`)\r\n    .then((data) => {\r\n      dispatch(fetchActiveRidesSuccess(data.data));\r\n      dispatch(updateActiveRideDetails(data.data[0]._id));\r\n    })\r\n    .catch((err) => dispatch(fetchActiveRidesFailed(err)));\r\n};\r\n\r\nexport const fetchActiveRidesStart = () => ({\r\n  type: GET_ACTIVERIDES_BEGAN,\r\n});\r\n\r\nexport const fetchActiveRidesFailed = (errmess) => ({\r\n  type: GET_ACTIVERIDES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const fetchActiveRidesSuccess = (activeRides) => ({\r\n  type: GET_ACTIVERIDES_SUCCESS,\r\n  payload: activeRides,\r\n});\r\n\r\n// REDUCER\r\nconst ActiveRidesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_ACTIVERIDEDETAILS:\r\n      return {\r\n        ...state,\r\n        rideDetails: state.rides.find((ride) => ride._id === action.payload),\r\n      };\r\n\r\n    case GET_ACTIVERIDES_BEGAN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errMsg: null,\r\n      };\r\n    case GET_ACTIVERIDES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: null,\r\n        rides: action.payload,\r\n      };\r\n    case GET_ACTIVERIDES_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default ActiveRidesReducer;\r\n","import * as Api from \"../services/api\";\r\n\r\nconst initialState = {\r\n  rideDetails: {},\r\n  rides: [],\r\n  isLoading: false,\r\n  errMsg: null,\r\n};\r\n\r\n// ACTION TYPES\r\nconst UPDATE_PASTRIDEDETAILS = \"UPDATE_PASTRIDEDETAILS\";\r\nconst GET_PASTRIDES_BEGAN = \"GET_PASTRIDES_BEGAN\";\r\nconst GET_PASTRIDES_FAILED = \"GET_PASTRIDES_FAILED\";\r\nconst GET_PASTRIDES_SUCCESS = \"GET_PASTRIDES_SUCCESS\";\r\n\r\n// ACTION CREATORS\r\nexport const updatePastRideDetails = (id) => ({\r\n  type: UPDATE_PASTRIDEDETAILS,\r\n  payload: id,\r\n});\r\n\r\nexport const fetchPastRides = (hospitalId) => (dispatch) => {\r\n  dispatch(fetchPastRidesStart());\r\n  Api.get(`hospital/pastrides/${hospitalId}`)\r\n    .then((data) => {\r\n      dispatch(fetchPastRidesSuccess(data.data));\r\n      dispatch(updatePastRideDetails(data.data[0]._id));\r\n    })\r\n    .catch((err) => dispatch(fetchPastRidesFailed(err)));\r\n};\r\n\r\nexport const fetchPastRidesStart = () => ({\r\n  type: GET_PASTRIDES_BEGAN,\r\n});\r\n\r\nexport const fetchPastRidesFailed = (errmess) => ({\r\n  type: GET_PASTRIDES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const fetchPastRidesSuccess = (pastRides) => ({\r\n  type: GET_PASTRIDES_SUCCESS,\r\n  payload: pastRides,\r\n});\r\n\r\n// REDUCER\r\nconst PastRidesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PASTRIDEDETAILS:\r\n      return {\r\n        ...state,\r\n        rideDetails: state.rides.find((ride) => ride._id === action.payload),\r\n      };\r\n\r\n    case GET_PASTRIDES_BEGAN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errMsg: null,\r\n      };\r\n    case GET_PASTRIDES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: null,\r\n        rides: action.payload,\r\n      };\r\n    case GET_PASTRIDES_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default PastRidesReducer;\r\n","import * as Api from \"../services/api\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  errMsg: null,\r\n  successMsg: null,\r\n  isSuccess: false,\r\n  userData: {},\r\n};\r\n\r\n// ACTION TYPES\r\n\r\nconst POST_PATIENTDATA_BEGAN = \"POST_PATIENTDATA_BEGAN\";\r\nconst POST_PATIENTDATA_FAILED = \"POST_PATIENTDATA_FAILED\";\r\nconst POST_PATIENTDATA_SUCCESS = \"POST_PATIENTDATA_SUCCESS\";\r\n\r\nconst GET_USERDATA_BEGAN = \"GET_USERDATA_BEGAN\";\r\nconst GET_USERDATA_FAILED = \"GET_USERDATA_FAILED\";\r\nconst GET_USERDATA_SUCCESS = \"GET_USERDATA_SUCCESS\";\r\n\r\n// ACTION CREATORS\r\n\r\nexport const addPatientData = (data) => (dispatch) => {\r\n  dispatch(addPatientDataStart());\r\n  Api.post(\"/patient/add\", data)\r\n    .then((response) => {\r\n      dispatch(addPatientDataSuccess(response.data.message));\r\n      console.log(response.data);\r\n    })\r\n    .catch((ex) => dispatch(addPatientDataFailed(ex.response.data.error)));\r\n};\r\n\r\nexport const addPatientDataStart = () => ({\r\n  type: POST_PATIENTDATA_BEGAN,\r\n});\r\n\r\nexport const addPatientDataFailed = (errmess) => ({\r\n  type: POST_PATIENTDATA_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addPatientDataSuccess = (mess) => ({\r\n  type: POST_PATIENTDATA_SUCCESS,\r\n  payload: mess,\r\n});\r\n\r\nexport const getUserData = (userMobile) => (dispatch) => {\r\n  dispatch(getUserDataStart());\r\n  Api.get(\"/patient/add\")\r\n    .then((response) => {\r\n      dispatch(getUserDataSuccess(response.data));\r\n      console.log(response.data);\r\n    })\r\n    .catch((ex) => dispatch(getUserDataFailed(ex.response.data)));\r\n};\r\n\r\nexport const getUserDataStart = () => ({\r\n  type: GET_USERDATA_BEGAN,\r\n});\r\n\r\nexport const getUserDataFailed = (errmess) => ({\r\n  type: GET_USERDATA_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const getUserDataSuccess = (data) => ({\r\n  type: GET_USERDATA_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\n// REDUCER\r\nconst PatientReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POST_PATIENTDATA_BEGAN:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        errMsg: null,\r\n        isSuccess: false,\r\n      };\r\n    case POST_PATIENTDATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: null,\r\n        isSuccess: true,\r\n        successMsg: action.payload,\r\n      };\r\n    case POST_PATIENTDATA_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMsg: action.payload,\r\n        isSuccess: false,\r\n      };\r\n\r\n    case GET_USERDATA_BEGAN:\r\n      return {\r\n        ...state,\r\n        errMsg: null,\r\n      };\r\n    case GET_USERDATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        errMsg: null,\r\n        userData: action.payload,\r\n      };\r\n    case GET_USERDATA_FAILED:\r\n      return {\r\n        ...state,\r\n        errMsg: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default PatientReducer;\r\n","import React from \"react\";\r\n\r\nconst Input = ({\r\n  name,\r\n  value,\r\n  onChange,\r\n  placeholder,\r\n  type,\r\n  label,\r\n\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      {label && <label htmlFor={name}>{label}</label>}\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        type={type}\r\n        className=\"form-control\"\r\n        id={name}\r\n        placeholder={placeholder}\r\n        {...otherProps}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"./input\";\r\nvar fu = []\r\n\r\nconst PatientDetailForm = ({\r\n  onSubmit,\r\n  patientDetail,\r\n  onChangeInput,\r\n  className,\r\n  driverList,\r\n  gurdnumber,\r\n  searchedUser,\r\n  setlocationuser\r\n}) => {\r\n  const [users, setusers] = useState([])\r\n  const [foundusers, setfoundusers] = useState([])\r\n  useEffect(()=>{\r\n\r\n    fetch('https://serverprioritypulse.herokuapp.com/user',{\r\n    method:\"get\",\r\n    headers:{\r\n        \"Content-Type\":\"application/json\",\r\n      }\r\n      // body:JSON.stringify({\r\n      //     query:value\r\n      // })\r\n    }).then(res => res.json())\r\n  .then(results => {\r\n      console.log(results)\r\n      setusers(results)\r\n      \r\n  })\r\n  },[])\r\n  const delay = (us)=>{\r\n    setlocationuser(us)\r\n  }\r\n  const se = (val) => {\r\n      fu =[]\r\n      for(var i=0;i<users.length;i++){\r\n        if((users[i].phoneNumber+'').indexOf(val) > -1){\r\n          // console.log(val)\r\n          fu.push(users[i])\r\n        }\r\n      }\r\n      console.log(fu)\r\n      setfoundusers(fu)\r\n      // searchedUser(fu)\r\n    }\r\n  // const userSearch =() =>{\r\n  //   onChangeInput()\r\n  // }\r\n  return (\r\n    <div className={`patientForm pb-4 pt-3 px-4 ${className}`}>\r\n      <h1 className=\"mb-1\">Patient Detail</h1>\r\n      <p>Fill the Details Below</p>\r\n      <form className=\"my-5\" onSubmit={onSubmit}>\r\n        <Input\r\n          name=\"name\"\r\n          value={patientDetail.name}\r\n          placeholder=\"Patient Name\"\r\n          onChange={onChangeInput}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"age\"\r\n          value={patientDetail.age}\r\n          placeholder=\"Patient Age\"\r\n          onChange={onChangeInput}\r\n          type=\"number\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"patientCase\"\r\n          value={patientDetail.patientCase}\r\n          placeholder=\"Case\"\r\n          onChange={onChangeInput}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"casePrior\"\r\n          value={patientDetail.casePrior}\r\n          placeholder=\"Priority Level\"\r\n          onChange={onChangeInput}\r\n          type=\"number\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"patientNo\"\r\n          value={patientDetail.patientNo}\r\n          placeholder=\"patient Contact\"\r\n          onChange={onChangeInput}\r\n          type=\"tel\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"guardianNo\"\r\n          value={patientDetail.guardianNo}\r\n          placeholder=\"Guardian Contact\"\r\n          onChange={(e)=>{\r\n         \r\n              // setvalue(e.target.value)\r\n           //   onChangeInput(<input name=\"guardianNo\" type=\"text\" class=\"form-control\" id=\"guardianNo\" placeholder=\"Guardian Contact\" required value={e.target.value}></input>)\r\n              se(e.target.value)\r\n              gurdnumber(e.target.value)\r\n              // console.log((users[0].phoneNumber+'').indexOf(e.target.value))\r\n            }}\r\n          type=\"tel\"\r\n          required\r\n        />\r\n        <div style={{maxHeight:'200px',overflow:'auto'}}>\r\n          {foundusers.length && foundusers.map((user,i)=>{\r\n            return <div key={i} \r\n            style={{color:'black',height:'30px',cursor:'pointer'}}\r\n            onClick={()=>{\r\n              gurdnumber(''+user.phoneNumber)\r\n              setfoundusers(user)\r\n              searchedUser(user)\r\n              // onChangeInput({name:'guardianNo',value:''+user.phoneNumber})\r\n              delay(user)\r\n              console.log(\"\"+user.phoneNumber)\r\n            }}\r\n            >{user.phoneNumber}</div>\r\n          })}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select\r\n            name=\"pickedBy\"\r\n            className=\"custom-select\"\r\n            onChange={onChangeInput}\r\n            value={patientDetail.pickedBy}\r\n            required\r\n          >\r\n            <option value=\"\">Select Driver...</option>\r\n            {driverList.map((driver, i) => (\r\n              <option value={driver._id} key={i}>\r\n                {driver.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"button\">\r\n          Submit\r\n        </button>\r\n        <p>Getting problem in submitting</p>\r\n      </form>\r\n      <Link to=\"/activeRides\">\r\n        <button className=\"button\">Track Patient</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientDetailForm;\r\n\r\n\r\n\r\n\r\n// \r\n\r\n// <input type='text' value={value} onChange={(e)=>{\r\n//   setvalue(e.target.value)\r\n//   se(e.target.value)\r\n//   // console.log((users[0].phoneNumber+'').indexOf(e.target.value))\r\n// }} />","import React, { useState } from \"react\";\r\n\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport profile from \"../assets/images/Profile.png\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const user = useSelector((state) => state.hospital.currentUser);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Priority Pulse\r\n        <p>Hospital Website</p>\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarPP\"\r\n        aria-controls=\"navbarPP\"\r\n        aria-expanded={isOpen}\r\n        aria-label=\"Toggle navigation\"\r\n        onClick={toggle}\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        className={`${!isOpen ? \"collapse\" : \"\"} navbar-collapse`}\r\n        id=\"navbarPP\"\r\n      >\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          {user && (\r\n            <>\r\n              <li className=\"nav-item my-auto mx-2\">\r\n                <NavLink\r\n                  className=\"nav-link primary-text-color px-3\"\r\n                  to=\"/home\"\r\n                >\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item my-auto mx-2\">\r\n                <NavLink\r\n                  className=\"nav-link primary-text-color px-3\"\r\n                  to=\"/activeRides\"\r\n                >\r\n                  Active Rides\r\n                </NavLink>\r\n              </li>\r\n\r\n              <li className=\"nav-item my-auto mx-2\">\r\n                <NavLink\r\n                  className=\"nav-link primary-text-color px-3\"\r\n                  to=\"/profile\"\r\n                >\r\n                  Profile\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item my-auto mx-2\">\r\n                <NavLink\r\n                  className=\"nav-link primary-text-color px-3\"\r\n                  to=\"/logout\"\r\n                >\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item my-auto mx-2\">\r\n                <img\r\n                  className=\"nav-link profile ml-2\"\r\n                  src={profile}\r\n                  alt=\"Profile\"\r\n                />\r\n              </li>\r\n            </>\r\n          )}\r\n\r\n          {!user && (\r\n            <>\r\n              <li className=\"nav-item my-auto mx-2\">\r\n                <NavLink\r\n                  className=\"nav-link primary-text-color px-3\"\r\n                  to=\"/register\"\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item my-auto mx-2\">\r\n                <NavLink\r\n                  className=\"nav-link primary-text-color px-3\"\r\n                  to=\"/login\"\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect ,useState,useCallback} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport usermarkersvg from \"../assets/images/usermarkersvg.svg\";\r\nimport ambulancesvg from '../assets/images/ambulancessvg.svg'\r\nimport hospitalmarkersvg from \"../assets/images/hospitalmarkersvg.svg\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst decodePolyline = require(\"decode-google-map-polyline\");\r\nlet usersocket, driversocket;\r\n\r\nlet  infoWindow, hospitalCoordinates,updatepostition,updatemarker;\r\nlet dmarker,umarker,pickuplocation , polyline,hospitallocation;\r\nlet map;\r\n\r\n// polyline =\r\n//  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\";\r\n\r\nconst IndexMap =  () =>{\r\n\r\n  const [initpolyline, setinitpolyline] = useState(  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\"  )\r\n  const [pickuplocation, setpickuplocation] = useState('')\r\n  const [ride, setride] = useState([])\r\n  const [hospitallocation, sethospitallocation] = useState('')\r\n  const rideDetails =  useSelector((state) => state.activeRides.rideDetails);\r\n  const userendpoi = \"http://134.209.158.239:3000/usertrack\";\r\n  const driverendpoi = \"http://134.209.158.239:3000/drivertrack\";\r\n\r\n useEffect(() => {\r\n   setride(rideDetails)\r\n   setinitpolyline(rideDetails.polyline)\r\n  console.log(rideDetails)\r\n   midware();\r\n  \r\n }, [rideDetails])\r\n\r\n useEffect(() => {\r\nrenderMap();\r\n }, [initpolyline])\r\n\r\n \r\n  const [userLocation, setUserLocation] = useState([]);\r\n const [driverLocation, setDriverLocation] = useState([]);\r\n /*\r\n useEffect(() => {\r\n  //  if(ride.length)\r\n setinitpolyline(rideDetails.polyline)\r\n  // console.log(initpolyline,\"changed\")\r\n  renderMap();\r\n }, [rideDetails])\r\n*/\r\nconst midware = () => {\r\n  var rideDetls =  rideDetails\r\n // console.log(rideDetls.polyline)\r\n}\r\n useEffect(() => {\r\n  usersocket = io.connect(userendpoi);\r\n  driversocket = io.connect(driverendpoi);\r\n  if(rideDetails){\r\n  usersocket.emit(\"join\", { roomid: rideDetails._id },console.log(\"joined\"));\r\n  }\r\n  usersocket.on(\"userlocation\", (locationuser) => {\r\n    setUserLocation(locationuser);\r\n\r\n   console.log(locationuser,\"usersocket\");\r\n  });\r\n  if(rideDetails.pickedBy){\r\n  driversocket.emit(\"join\", { roomid: rideDetails.pickedBy._id });\r\n//console.log(\"id exiext\")  \r\n}\r\n  driversocket.on(\"driverlocation\", (locationdriver) => {\r\n    setDriverLocation(locationdriver);\r\n    if (locationdriver) {\r\n   //   console.log(\"Yes\");\r\n   console.log(locationdriver.coordinates,\"driverlocation\")\r\n\r\n    //console.log(locationdriver,\"driversocket\");\r\n    }\r\n  });\r\n}, [rideDetails]);\r\n\r\nif(driverLocation.coordinates){\r\n  var opos={\r\n  lat : driverLocation.coordinates[0],\r\n  lng : driverLocation.coordinates[1]\r\n}}\r\n\r\nif(userLocation.coordinates){\r\n  var upos ={\r\n    lat : userLocation.coordinates[0],\r\n    lng : userLocation.coordinates[1]\r\n  }\r\n}\r\n /* const details = [rideDetails].map(detail=>{\r\n  setinitpolyline(detail.polyline)\r\n//setinitpolyline(detail.polyline)\r\n    // return (\r\n    //  pickuplocation =detail.pickUplocation,\r\n    // polyline = detail.polyline,\r\n    // hospitallocation= detail.pickedBy)\r\n  })*/\r\n\r\n /* useEffect(()=>{\r\n    console.log(\"polyline changed\")\r\n\r\n  },[polyline])*/\r\n//console.log(pickuplocation)\r\n\r\n//console.log(typeof(polyline))\r\n//console.log(hospitallocation)\r\n\r\n//drivermarker\r\nuseEffect(() => {\r\n  if(!map )\r\n\r\n  return;\r\n  if(dmarker && opos )\r\n       dmarker.setMap(null)\r\n\r\n       dmarker = new window.google.maps.Marker(\r\n         {position:opos ,\r\n        icon: ambulancesvg,\r\n\r\n        map})\r\n}, [driverLocation])\r\n\r\nuseEffect(() => {\r\n  if(!map)\r\n  return;\r\n  if(umarker && upos )\r\n       umarker.setMap(null)\r\n//console.log(userLocation.coordinates)\r\n\r\n       umarker = new window.google.maps.Marker(\r\n         {position: upos\r\n       ,\r\n        icon: usermarkersvg,\r\n\r\n        map})\r\n}, [userLocation])\r\n\r\n/*\r\n if(umarker && userLocation.coordinates )\r\n       umarker.setMap(null)\r\nconsole.log(userLocation.coordinates)\r\n\r\n       {userLocation.coordinates && ( umarker = new window.google.maps.Marker(\r\n         {position: {lat: userLocation.coordinates[0], lng : userLocation.coordinates[1]}\r\n       ,\r\n        icon: usermarkersvg,\r\n\r\n        map}))}\r\n*/\r\n//polyline\r\n\r\n/*\r\n\r\n const [freestate]= useState(\"\");\r\nuseEffect(()=>{\r\n  renderMap();\r\n},[freestate]);\r\n*/\r\nconst renderMap = () => {\r\n  loadScript(\r\n    \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA&libraries=geometry&callback=initMap\"\r\n  );\r\n  window.initMap = initMap;\r\n};\r\n// api AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\r\nconst initMap = async () =>{\r\n // polyline= await  polyline.toString()\r\n  convrter(initpolyline)\r\n  //console.log(typeof(initpolyline))\r\n  await initMap1()\r\n}\r\n\r\nconst convrter =async(pol) =>{\r\n // pol = await JSON.stringify(pol)\r\n // console.log(typeof(pol))\r\n // console.log(initpolyline)\r\n}\r\n\r\nconst initMap1 =()=> {\r\n\r\n//polyline= JSON.stringify(polyline)\r\n  if(initpolyline !== \"\" && typeof(initpolyline)===\"string\"){\r\n //   console.log(\"polyline strinefed\")\r\n   let polyline2 = initpolyline;\r\n //polyline2 = polyline2.replace(\"\\\\\\\\\", \"\\\\\");\r\n //  polyline2 = polyline2.substring(1, polyline2.length - 1);\r\n      let pathCoordinates = decodePolyline(polyline2);\r\n     let pathlength = pathCoordinates.length;\r\n  //   console.log(pathCoordinates);\r\n//console.log(polyline2)\r\n\r\n\r\n  map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n    center: { lat: 16.7566, lng: 81.6970 },\r\n    zoom: 15,\r\n  });\r\n  infoWindow = new window.google.maps.InfoWindow(); // Try HTML5 geolocation.\r\n  map.setCenter(pathCoordinates[0]);\r\n\r\n     //polyline  \r\n      const polylinePath = new window.google.maps.Polyline({\r\n        path: pathCoordinates,\r\n        geodesic: true,\r\n        strokeColor: \"#FF0000\",\r\n        strokeOpacity: 1.0,\r\n        strokeWeight: 2,\r\n      });\r\n      polylinePath.setMap(map);\r\n\r\n//polyline markers\r\nvar marker3 = new window.google.maps.Marker({\r\n  map,\r\nicon : usermarkersvg,\r\n  position: pathCoordinates[0],\r\n});\r\nvar marker4 = new window.google.maps.Marker({\r\n  map,\r\nicon: hospitalmarkersvg,\r\n  position: pathCoordinates[pathlength - 1],\r\n});\r\n      \r\n\r\n\r\n\r\n  }else{\r\n    console.log(\"fail\")\r\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      center: { lat: 16.7566, lng: 81.6970 },\r\n      zoom: 15,\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n  return (\r\n    <main >\r\n    \r\n      <div style={{  height: \"60vh\" }}id=\"map\" className=\"indexMap\"></div>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction loadScript(url) {\r\n  var index = window.document.getElementsByTagName(\"script\")[0];\r\n  var script = window.document.createElement(\"script\");\r\n  script.src = url;\r\n  script.async = true;\r\n  script.defer = true;\r\n  index.parentNode.insertBefore(script, index);\r\n}\r\n\r\n\r\nexport default IndexMap;\r\n\r\n/*import React, { Component } from \"react\";\r\n//import \"./App.css\";\r\n//import maptheme from \"./maptheme\";\r\n\r\n//decoder\r\nconst decodePolyline = require(\"decode-google-map-polyline\");\r\nvar polyline2 =\r\n  \"}|dyCwjnyN[?gACiCK?aBGwBCcACoAAw@AuAIe@CwAEwAMqEy@?{ACyAAi@AeBIyAK{AQeC_@eBYAAk@My@UcBe@AAq@SaA_@o@YwCaBqBkAOIyB_Bi@e@MMWWaBeBwC}CYY]i@cA}A{@aBKS{A_DAEU_@o@oBUu@Ma@K_@AGCKm@gCa@kBMQWmAOiAEg@I_AKaB?MIeC?IGaBAkA@Y@oA@WHkA@SBk@?M?K?IAKMGmBaAcAi@q@@YQ@UaCwAA??@A?A?A??@A?A?AAA?A?AAA??AA??AA?ACAC?E?E?A?A@??A@A?A@??A@??A@?@A@?@?@AX{Ad@}BLuALiABm@DgA?KBqBJ?fALVCT_BF[\";\r\nvar pathCoordinates = decodePolyline(polyline2);\r\nvar pathlength = pathCoordinates.length;\r\n\r\nconsole.log(pathCoordinates);\r\n\r\n//class starts\r\n\r\nclass IndexMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderMap();\r\n  }\r\n\r\n  renderMap = () => {\r\n    loadScript(\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA&libraries=geometry&callback=initMap\"\r\n    );\r\n    window.initMap = this.initMap;\r\n  };\r\n  // api AIzaSyD1DrDBUd6GNL2EIBCxK-K0OjkTny8kbuA\r\n  //maps\r\n  initMap = () => {\r\n    var map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      center: { lat: 25.27794, lng: 83.00244 },\r\n      zoom: 18,\r\n    });\r\n    //polyline { lat: 25.27794, lng: 83.00244 }\r\n    const polylinePath = new window.google.maps.Polyline({\r\n      path: pathCoordinates,\r\n      geodesic: true,\r\n      strokeColor: \"#FF0000\",\r\n      strokeOpacity: 1.0,\r\n      strokeWeight: 2,\r\n    });\r\n    polylinePath.setMap(map);\r\n\r\n    //markers\r\n\r\n    var marker3 = new window.google.maps.Marker({\r\n      map,\r\n\r\n      position: pathCoordinates[0],\r\n    });\r\n    var marker4 = new window.google.maps.Marker({\r\n      map,\r\n\r\n      position: pathCoordinates[pathlength - 1],\r\n    });\r\n\r\n\r\n    //end\r\n  };\r\n\r\n  render() {\r\n    const { mapvh, mapvw } = this.props;\r\n\r\n    return (\r\n      <main>\r\n        <div style={{ width: mapvw, height: mapvh }} id=\"map\"></div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nfunction loadScript(url) {\r\n  var index = window.document.getElementsByTagName(\"script\")[0];\r\n  var script = window.document.createElement(\"script\");\r\n  script.src = url;\r\n  script.async = true;\r\n  script.defer = true;\r\n  index.parentNode.insertBefore(script, index);\r\n}\r\n\r\nexport default IndexMap;\r\n*/\r\n","import React from \"react\";\r\n\r\nimport Input from \"./input\";\r\nimport GMap from \"./gMaps\";\r\n\r\nconst HomeLocation = ({\r\n  className,\r\n  onChangeInput,\r\n  userLocation,\r\n  setUserLocation,\r\n  patientDetail,\r\n  setPatientDetails\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={`homeLocation ${className}`}>\r\n       \r\n        <GMap mapvh=\"40vh\"\r\n         setUserLocation={setUserLocation} \r\n         setPatientDetails={ setPatientDetails}\r\n         patientDetail={patientDetail}\r\n         />\r\n        <div className=\"row mt-4 pt-2\">\r\n          <div className=\"col-md-12 col-lg-6 pr-5\">\r\n            <Input\r\n              name=\"area\"\r\n              value={userLocation.area}\r\n              onChange={onChangeInput}\r\n              placeholder=\"Area\"\r\n              label=\"Area\"\r\n            />\r\n            <Input\r\n              name=\"landmarkStreet\"\r\n              value={userLocation.landmarkStreet}\r\n              onChange={onChangeInput}\r\n              placeholder=\"Street\"\r\n              label=\"Landmark Street\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 col-lg-6\">\r\n            <Input\r\n              name=\"landmark\"\r\n              value={userLocation.landmark}\r\n              onChange={onChangeInput}\r\n              placeholder=\"Landmark\"\r\n              label=\"Landmark\"\r\n            />\r\n            <Input\r\n              name=\"cityState\"\r\n              value={userLocation.cityState}\r\n              onChange={onChangeInput}\r\n              placeholder=\"City, State\"\r\n              label=\"City, State\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeLocation;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"spinner-border text-info\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import jwtDecode from \"jwt-decode\";\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  try {\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwtDecode(jwt)._id;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default {\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchDrivers } from \"../store/Drivers\";\r\n\r\nimport PatientDetailForm from \"../components/patientDetailForm\";\r\nimport Header from \"../components/headerComponent\";\r\n\r\nimport HomeLocation from \"../components/homeLocation\";\r\nimport Loading from \"../components/loading\";\r\nimport { addPatientData } from \"../store/Patient\";\r\nimport auth from \"../services/authService\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const [searchedUsers, setsearchedUsers] = useState([])\r\n  const [giraida, setgiraida] = useState('')\r\n  //console.log(searchedUsers)\r\n  const [patientDetails, setPatientDetails] = useState({\r\n    name: \"\",\r\n    age: \"\",\r\n    patientCase: \"\",\r\n    casePrior: \"\",\r\n    guardianNo: \"\",\r\n    patientNo: \"\",\r\n    pickedBy: \"\",\r\n    pickUplocation: {\r\n      coordinates: [12.24, 34.38889],\r\n    },\r\n  });\r\n  const setlocationuser =(user)=>{\r\n    // setPatientDetails({pickUplocation : user.location})\r\n    setPatientDetails((prev) => ({\r\n      ...prev,\r\n      pickUplocation : user.location\r\n    }));\r\n   // console.log(user.location)\r\n  }\r\n\r\n // console.log(patientDetails.pickUplocation)\r\n  const [userLocation, setUserLocation] = useState({\r\n    area: \"\",\r\n    landmark: \"\",\r\n    landmarkStreet: \"\",\r\n    cityState: \"\",\r\n  });\r\n  const driverLoading = useSelector((state) => state.drivers.isLoading);\r\n  const driverList = useSelector((state) => state.drivers.driverDetails); // Replace 1 with hospital ID\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchDrivers(auth.getCurrentUser()));\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addPatientData(patientDetails));\r\n    console.log(patientDetails);\r\n    history.push('/activeRides')\r\n  };\r\n\r\n  const handleChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    setPatientDetails((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n   console.log(currentTarget)\r\n  };\r\n\r\n//console.log(giraida)\r\n// useEffect(()=>{\r\n//   setPatientDetails((prev)=>({\r\n//     ...prev,\r\n//     guardianNo:giraida\r\n//   }));\r\n//  // console.log(\"perforemed\")\r\n// },[giraida])\r\n\r\n  const handleChangeGN = async(num) => {\r\n    // setgiraida(num)\r\n    console.log(num)\r\n    var name = 'guardianNo';\r\n    var value = num;\r\n    setPatientDetails((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    //  console.log(typeof(num))\r\n    // fetch('')\r\n  };\r\n  console.log(patientDetails)\r\n\r\n//console.log(patientDetails.guardianNo)\r\n\r\n  const handleLocationChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    setUserLocation((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark-screen pb-5\">\r\n        <Header />\r\n        <div className=\"app-container mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-lg-8 mt-0.75 px-0\">\r\n              <HomeLocation\r\n                className=\"mx-3\"\r\n                userLocation={userLocation}\r\n                onChangeInput={handleLocationChange}\r\n                setUserLocation={setUserLocation}\r\n                patientDetail={patientDetails}\r\n                setPatientDetails={setPatientDetails}\r\n\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-4 mt-0.75 px-0\">\r\n              {driverLoading ? (\r\n                <Loading />\r\n              ) : (\r\n                <PatientDetailForm\r\n                  className=\"mx-auto\"\r\n                  onSubmit={handleSubmit}\r\n                  patientDetail={patientDetails}\r\n                  onChangeInput={handleChange}\r\n                  driverList={driverList}\r\n                  gurdnumber={handleChangeGN}\r\n                  searchedUser={setsearchedUsers}\r\nsetlocationuser={setlocationuser}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"light-screen how-work\">\r\n        <div className=\"app-container mt-5 mb-5\">\r\n          <div className=\"row mb-5\">\r\n            <div className=\"col-md-12 col-lg-6 text-left\">\r\n              <h1>How it works</h1>\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-6 text-right\">\r\n              <img\r\n                className=\"img-fluid\"\r\n                alt=\"work\"\r\n                src=\"https://picsum.photos/700/450\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-lg-6 text-left\">\r\n              <img\r\n                className=\"img-fluid mx-auto\"\r\n                alt=\"work\"\r\n                src=\"https://picsum.photos/700/450\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-6 text-right\">\r\n              <h1>How it works</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst ActiveRidesList = ({ list, className, onClick }) => {\r\n  return (\r\n    <>\r\n      <table className={`activeRidesList ${className}`}>\r\n        <tbody>\r\n          {list.map((ride, i) => (\r\n            <tr key={i} onClick={onClick(ride._id)}>\r\n              <td style={{ width: \"250px\" }}>{ride.pickedBy.name}</td>\r\n              <td className=\"text-right pr-2\">\r\n                <svg width=\"15\" height=\"15\">\r\n                  <circle\r\n                    cx=\"7.5\"\r\n                    cy=\"7.5\"\r\n                    r=\"7.5\"\r\n                    strokeWidth=\"4\"\r\n                    fill={ride.signalColor}\r\n                  />\r\n                </svg>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActiveRidesList;\r\n","import React from \"react\";\r\n\r\nconst RideDetail = ({ ride, className }) => {\r\n  return (\r\n    <>\r\n      <table className={`activeRidesList ${className}`}>\r\n        <tbody>\r\n          {ride.pickedBy && (\r\n            <tr>\r\n              <td className=\"ride-header\">Driver Name:</td>\r\n              <td className=\"ride-ans\">{ride.pickedBy.name}</td>\r\n            </tr>\r\n          )}\r\n          {ride.pickedBy && (\r\n            <tr>\r\n              <td className=\"ride-header\">Driver Contact:</td>\r\n              <td className=\"ride-ans\">{ride.pickedBy.mobileNo}</td>\r\n            </tr>\r\n          )}\r\n\r\n          {ride.name && (\r\n            <tr>\r\n              <td className=\"ride-header\">Patient Name:</td>\r\n              <td className=\"ride-ans\">{ride.name}</td>\r\n            </tr>\r\n          )}\r\n          {ride.guardianNo && (\r\n            <tr>\r\n              <td className=\"ride-header\">Guardian Contact:</td>\r\n              <td className=\"ride-ans\">{ride.guardianNo}</td>\r\n            </tr>\r\n          )}\r\n          {ride.age && (\r\n            <tr>\r\n              <td className=\"ride-header\">Patient Age:</td>\r\n              <td className=\"ride-ans\">{ride.age}</td>\r\n            </tr>\r\n          )}\r\n          {ride.pcase && (\r\n            <tr>\r\n              <td className=\"ride-header\">Patient Case:</td>\r\n              <td className=\"ride-ans\">{ride.pcase}</td>\r\n            </tr>\r\n          )}\r\n          {ride.casePrior && (\r\n            <tr>\r\n              <td className=\"ride-header\">Priority Level:</td>\r\n              <td className=\"ride-ans\">{ride.casePrior}</td>\r\n            </tr>\r\n          )}\r\n          {ride.pickedBy && (\r\n            <tr>\r\n              <td className=\"ride-header\">Location:</td>\r\n              <td className=\"ride-ans\">{ride.pickedBy.hospital.address}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RideDetail;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport auth from \"../services/authService\";\r\nimport IndexMap from \"../components/indexMap\";\r\nimport Header from \"../components/headerComponent\";\r\nimport ActiveRidesList from \"../components/activeRidesList\";\r\n\r\nimport {\r\n  fetchActiveRides,\r\n  updateActiveRideDetails,\r\n} from \"../store/ActiveRides\";\r\nimport Loading from \"../components/loading\";\r\nimport RideDetail from \"../components/rideDetail\";\r\n\r\nconst ActiveRides = () => {\r\n  const activeRides = useSelector((state) => state.activeRides.rides); // Replace 1 with Hospital ID\r\n  const dispatch = useDispatch();\r\n\r\n  const rideDetails = useSelector((state) => state.activeRides.rideDetails);\r\n  const activeRidesLoading = useSelector(\r\n    (state) => state.activeRides.isLoading\r\n  );\r\n  useEffect(() => {\r\n    dispatch(fetchActiveRides(auth.getCurrentUser()));\r\n  }, []);\r\n\r\n  const clickHandler = (patientId) => () => {\r\n    dispatch(updateActiveRideDetails(patientId));\r\n  };\r\n\r\n\r\n // console.log(rideDetails)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"light-screen pb-5\">\r\n        <Header />\r\n        <div className=\"app-container mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-lg-9 px-5 mt-4\">\r\n              <IndexMap mapvh=\"60vh\" />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-3 mt-1\">\r\n              <div className=\"rides\">\r\n                <div className=\"ridesList mb-4\">\r\n                  <h3>Active Rides</h3>\r\n                  {activeRidesLoading ? (\r\n                    <Loading />\r\n                  ) : (\r\n                    <ActiveRidesList\r\n                      onClick={clickHandler}\r\n                      className=\"mx-auto alternate-table-color\"\r\n                      list={activeRides}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"ridesDetail\">\r\n                  <h3>Ride Details</h3>\r\n                  <RideDetail\r\n                    className=\"alternate-table-color mx-auto\"\r\n                    ride={rideDetails}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActiveRides;\r\n","import React from \"react\";\r\n\r\nimport hospitalImage from \"../assets/images/hospitalpic.jpg\";\r\n\r\nconst HospitalDetails = ({ hospital }) => {\r\n  return (\r\n    <div className=\"hospitalDetails\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-1 col-lg-1\"></div>\r\n        <div className=\"col-md-11 col-lg-3 pr-5\">\r\n          <img\r\n            className=\"img-fluid hosp-image\"\r\n            src={hospitalImage}\r\n            alt={hospital.name}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 col-lg-8 mx-auto\">\r\n          <h4>{hospital.name}</h4>\r\n          <p>{hospital.address}</p>\r\n          <div className=\"row hospitalSubDetails\">\r\n            <div className=\"col-md-12 col-lg-5\">\r\n              <table className=\"mt-3\">\r\n                <tbody>\r\n                  {hospital.code && (\r\n                    <tr className=\"hospitalCode\">\r\n                      <td className=\"td-head\">Hospital Code</td>\r\n                      <td className=\"colon\">:</td>\r\n                      <td>{hospital.code}</td>\r\n                    </tr>\r\n                  )}\r\n                  {hospital.numberOfDrivers && (\r\n                    <tr>\r\n                      <td className=\"td-head\">Total Driver</td>\r\n                      <td className=\"colon\">:</td>\r\n                      <td>{hospital.numberOfDrivers}</td>\r\n                    </tr>\r\n                  )}\r\n                  {hospital.subType && (\r\n                    <tr>\r\n                      <td className=\"td-head\">Subscription Type</td>\r\n                      <td className=\"colon\">:</td>\r\n                      <td>{hospital.subType}</td>\r\n                    </tr>\r\n                  )}\r\n                  {hospital.reqUsed && (\r\n                    <tr>\r\n                      <td className=\"td-head\">Request Used</td>\r\n                      <td className=\"colon\">:</td>\r\n                      <td>{hospital.reqUsed}</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-7\">\r\n              <table className=\"mt-3\">\r\n                <tbody>\r\n                  {hospital.subExpiry && (\r\n                    <tr className=\"subExpiry\">\r\n                      <td className=\"td-head\">Subscription Ends on</td>\r\n                      <td className=\"colon\">:</td>\r\n                      <td>{hospital.subExpiry}</td>\r\n                    </tr>\r\n                  )}\r\n                  {hospital.rating && (\r\n                    <tr>\r\n                      <td className=\"td-head\">Rating</td>\r\n                      <td className=\"colon\">:</td>\r\n                      <td>{hospital.rating}</td>\r\n                    </tr>\r\n                  )}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HospitalDetails;\r\n","import React from \"react\";\r\n\r\nconst DriversList = ({ list, className, onClick }) => {\r\n  return (\r\n    <>\r\n      <table className={`activeRidesList ${className}`}>\r\n        <tbody>\r\n          {list.map((ride, i) => (\r\n            <tr key={i} onClick={onClick(ride._id)}>\r\n              <td style={{ width: \"250px\" }}>{ride.name}</td>\r\n              <td className=\"text-right pr-2\">\r\n                <svg width=\"15\" height=\"15\">\r\n                  <circle\r\n                    cx=\"7.5\"\r\n                    cy=\"7.5\"\r\n                    r=\"7.5\"\r\n                    strokeWidth=\"4\"\r\n                    fill={ride.signalColor}\r\n                  />\r\n                </svg>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DriversList;\r\n","import React from \"react\";\r\nconst DateTime = (timestamp) => {\r\n  const x = new Date(timestamp);\r\n  return `${x.getHours()}:${x.getMinutes()} - ${x.getDate()}/${x.getMonth()}/${x.getFullYear()}`;\r\n};\r\nconst PatientTable = ({ data, className, onClick }) => {\r\n  if (data.length === 0) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <table className={`patientTable ${className}`} style={{ minWidth: \"100%\" }}>\r\n      <thead>\r\n        <tr>\r\n          <th>S. No.</th>\r\n          <th>Request Time</th>\r\n          <th>Driver Name</th>\r\n          <th>Driver Contact</th>\r\n          <th>Patient Name</th>\r\n          <th>Patient Case</th>\r\n          <th>Priority Level</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((patient, i) => (\r\n          <tr key={i} onClick={onClick(patient._id)}>\r\n            <td>{i + 1}</td>\r\n            <td>{DateTime(patient.createdAt)}</td>\r\n            <td>{patient.pickedBy.name}</td>\r\n            <td>{patient.pickedBy.mobileNo}</td>\r\n            <td>{patient.name}</td>\r\n            <td>{patient.pcase}</td>\r\n            <td>{patient.casePrior}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default PatientTable;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport IndexMap from \"../components/indexMap\";\r\nimport Header from \"../components/headerComponent\";\r\nimport HospitalDetails from \"../components/hospitalDetails\";\r\nimport DriversList from \"../components/driversList\";\r\nimport RideDetail from \"../components/rideDetail\";\r\nimport PatientTable from \"../components/patientTable\";\r\nimport { updateDriverInfo, fetchDrivers } from \"../store/Drivers\";\r\nimport { fetchPastRides, updatePastRideDetails } from \"../store/PastRides\";\r\nimport Loading from \"../components/loading\";\r\nimport auth from \"../services/authService\";\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const numberOfDrivers = useSelector(\r\n    (state) => state.drivers.driverDetails.length\r\n  );\r\n  let hospitalDetails = useSelector((state) => state.hospital.hospitalDetails); //Replace 1 with hospital ID\r\n  hospitalDetails = {\r\n    ...hospitalDetails,\r\n    subType: \"Hos1\",\r\n    reqUsed: 25,\r\n    subExpiry: \"10 Aug 2020\",\r\n    numberOfDrivers,\r\n  };\r\n  const driverLoading = useSelector((state) => state.drivers.isLoading);\r\n  const pastRideLoading = useSelector((state) => state.pastRides.isLoading);\r\n  const registeredDrivers = useSelector((state) => state.drivers.driverDetails);\r\n  const rideDetails = useSelector((state) => state.pastRides.rideDetails);\r\n\r\n  const driverInfo = useSelector((state) => state.drivers.driverInfo);\r\n\r\n  const patientData = useSelector((state) => state.pastRides.rides);\r\n  useEffect(() => {\r\n    const user = auth.getCurrentUser();\r\n    dispatch(fetchPastRides(user));\r\n    dispatch(fetchDrivers(user));\r\n  }, []);\r\n  const clickHandler = (patientId) => () => {\r\n    dispatch(updatePastRideDetails(patientId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark-screen pb-5\">\r\n        <Header />\r\n        <div className=\"app-container mb-5\">\r\n          <div className=\"img-fluid\">\r\n            <HospitalDetails hospital={hospitalDetails} />\r\n            <div className=\"row pt-5\">\r\n              <div className=\"col-md-1 col-lg-1 mt-5\"></div>\r\n              <div className=\"col-md-11 col-lg-3 mt-5\">\r\n                <h3 className=\"mb-3\">Registered Drivers</h3>\r\n                {driverLoading ? (\r\n                  <Loading />\r\n                ) : (\r\n                  <DriversList\r\n                    onClick={(driverId) => () =>\r\n                      dispatch(updateDriverInfo(driverId))}\r\n                    className=\"reg-driver\"\r\n                    list={registeredDrivers}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-12 col-lg-3 mt-5\">\r\n                <h3 className=\"mb-3\">Driver Info</h3>\r\n                <h4>{driverInfo.name}</h4>\r\n                <p>Contact&nbsp;&nbsp;&nbsp;&nbsp; : {driverInfo.mobileNo}</p>\r\n              </div>\r\n              <div className=\"col-md-12 col-lg-3 mt-5\">\r\n                <img\r\n                  className=\"img-fluid driverL\"\r\n                  alt=\"work\"\r\n                  src={driverInfo.driverL}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12 col-lg-2 mt-5\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"light-screen\">\r\n        <div className=\"app-container past-rides mt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h4 className=\"mb-5\">Past Rides</h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row mb-5 pb-5\">\r\n            <div className=\"col-md-12 col-lg-9\">\r\n              <IndexMap mapvh=\"60vh\" />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-3 profileRideDet\">\r\n              <h5 className=\"text-center mb-4\">Ride Details</h5>\r\n              <RideDetail\r\n                className=\"alternate-table-color mx-auto\"\r\n                ride={rideDetails}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-5 mb-5\">\r\n            <div className=\"col-md-1\"></div>\r\n            <div className=\"col-md-12\">\r\n              {pastRideLoading ? (\r\n                <Loading />\r\n              ) : (\r\n                <PatientTable\r\n                  onClick={clickHandler}\r\n                  className=\"alternate-table-color mx-auto\"\r\n                  data={patientData}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"col-lg-1 .d-md-none\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\n\r\nimport fbLogo from \"../assets/images/facebook-brands.svg\";\r\nimport lnkdLogo from \"../assets/images/linkedin-brands.svg\";\r\nimport instLogo from \"../assets/images/instagram-square-brands.svg\";\r\nimport twitLogo from \"../assets/images/twitter-square-brands.svg\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-lg-4 px-0\">\r\n          <h1>Priority Pulse</h1>\r\n        </div>\r\n        <div className=\"col-sm-12 col-lg-5 footer-contact\">\r\n          <h3>Contact</h3>\r\n          <ul>\r\n            <li>Nithish</li>\r\n            <li>Kiran</li>\r\n            <li>Sudeep</li>\r\n            <li>Harish</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-sm-12 col-lg-3\">\r\n          <h3>Email</h3>\r\n          <p>prioritypulse@gmail.com</p>\r\n          <ul>\r\n            <li>\r\n              <a\r\n                href=\"localhost:3000\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img className=\"social-icon\" alt=\"Twitter\" src={twitLogo} />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"https://www.linkedin.com/company/priority-pulse-pvt/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img className=\"social-icon\" alt=\"LinkedIn\" src={lnkdLogo} />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"https://www.facebook.com/PriorityPulse\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img className=\"social-icon\" alt=\"Facebook\" src={fbLogo} />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"https://www.instagram.com/priority_pulse/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img className=\"social-icon\" alt=\"Instagram\" src={instLogo} />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"copyright\">\r\n          <p>&#169; 2020 All Rights Reserved</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Input from \"./input\";\r\n\r\nconst LoginForm = ({ onSubmit, user, onChangeInput, className }) => {\r\n  return (\r\n    <div className={`patientForm pb-4 pt-3 px-4 ${className}`}>\r\n      <h1 className=\"mb-1\">Sign In</h1>\r\n      <p>Login with Google Credentials</p>\r\n      <form className=\"mt-5 mb-2\" onSubmit={onSubmit}>\r\n        <Input\r\n          name=\"code\"\r\n          value={user.code}\r\n          placeholder=\"Hospital Code\"\r\n          onChange={onChangeInput}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          value={user.password}\r\n          placeholder=\"Password\"\r\n          onChange={onChangeInput}\r\n          type=\"password\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className=\"button\">\r\n          Login\r\n        </button>\r\n        <div className=\"row ml-0\">\r\n          <div className=\"form-check text-left col\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"keepMeLoggedIn\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"keepMeLoggedIn\">\r\n              <p>Keep me Logged in</p>\r\n            </label>\r\n          </div>\r\n          <div className=\"col text-right\">\r\n            <p>Forgot Password?</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <Link to=\"/register\">\r\n        <button type=\"submit\" className=\"button mt-4\">\r\n          Register\r\n        </button>\r\n      </Link>\r\n\r\n      <p className=\"m-0\">Create new account</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport LoginForm from \"../components/loginForm\";\r\nimport Header from \"../components/headerComponent\";\r\nimport IndexMap from \"../components/indexMap\";\r\nimport { loginToHospital } from \"../store/Hospitals\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Login = () => {\r\n  const [user, setUser] = useState({\r\n    password: \"\",\r\n    code: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginToHospital(user));\r\n    //console.log(user);\r\n  };\r\n\r\n  const handleChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    setUser((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark-screen pb-3\">\r\n        <Header />\r\n        <div className=\"app-container mb-5\">\r\n          <LoginForm\r\n            className=\"mx-auto mt-5\"\r\n            onSubmit={handleSubmit}\r\n            user={user}\r\n            onChangeInput={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"text-center mt-5 mb-5 pt-5\">\r\n          <p>&#169; 2020 All Rights Reserve</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"light-screen how-work\">\r\n        <div className=\"app-container mt-5 mb-5\">\r\n          <div className=\"row mb-5\">\r\n            <div className=\"col-md-12 col-lg-6 text-left\">\r\n              <h1>How it works</h1>\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-6 text-right\">\r\n              <img\r\n                className=\"img-fluid\"\r\n                alt=\"work\"\r\n                src=\"https://picsum.photos/700/450\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-lg-6 text-left\">\r\n              <IndexMap mapvh=\"45vh\" />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-6 text-right\">\r\n              <h1>About Us</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Input from \"./input\";\r\n\r\nconst LoginForm = ({ onSubmit, user, onChangeInput, className }) => {\r\n  return (\r\n    <div className={`patientForm pb-4 pt-3 px-4 ${className}`}>\r\n      <h1 className=\"mb-1\">Register</h1>\r\n      <p>Register with Google Credentials</p>\r\n      <form className=\"mt-5 mb-2\" onSubmit={onSubmit}>\r\n        <Input\r\n          name=\"code\"\r\n          value={user.code}\r\n          placeholder=\"Hospital Code\"\r\n          onChange={onChangeInput}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"password\"\r\n          value={user.password}\r\n          placeholder=\"Password\"\r\n          onChange={onChangeInput}\r\n          type=\"password\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"name\"\r\n          value={user.name}\r\n          placeholder=\"Hospital Name\"\r\n          onChange={onChangeInput}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"address\"\r\n          value={user.address}\r\n          placeholder=\"Hospital Area\"\r\n          onChange={onChangeInput}\r\n          type=\"text\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"hospitalNumbers\"\r\n          value={user.hospitalNumbers}\r\n          placeholder=\"Hospital Phone\"\r\n          onChange={onChangeInput}\r\n          type=\"tel\"\r\n          required\r\n        />\r\n        <Input\r\n          name=\"email\"\r\n          value={user.email}\r\n          placeholder=\"Email\"\r\n          onChange={onChangeInput}\r\n          type=\"email\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className=\"button\">\r\n          Register\r\n        </button>\r\n        <Link to=\"/login\">\r\n          <p>Already have an account? Login</p>\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport RegisterForm from \"../components/registerUserForm\";\r\nimport Header from \"../components/headerComponent\";\r\nimport IndexMap from \"../components/indexMap\";\r\nimport { registerHospital } from \"../store/Hospitals\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Register = (props) => {\r\n  const [registerUser, setRegisterUser] = useState({\r\n    code: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n    hospitalNumbers: \"\",\r\n    email: \"\",\r\n    hospitalLocation: {\r\n      coordinates: [\r\n        12.24, //longitude\r\n        34.38889, //latitude\r\n      ],\r\n    },\r\n  });\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(registerHospital(registerUser));\r\n  };\r\n\r\n  const handleChange = ({ currentTarget }) => {\r\n    const { name, value } = currentTarget;\r\n    setRegisterUser((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dark-screen pb-3\">\r\n        <Header />\r\n        <div className=\"app-container mb-5\">\r\n          <RegisterForm\r\n            className=\"mx-auto\"\r\n            onSubmit={handleSubmit}\r\n            user={registerUser}\r\n            onChangeInput={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"text-center mt-5 mb-5 pt-5\">\r\n          <p>&#169; 2020 All Rights Reserve</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"light-screen how-work\">\r\n        <div className=\"app-container mt-5 mb-5\">\r\n          <div className=\"row mb-5\">\r\n            <div className=\"col-md-12 col-lg-6 text-left\">\r\n              <h1>How it works</h1>\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-6 text-right\">\r\n              <img\r\n                className=\"img-fluid\"\r\n                alt=\"work\"\r\n                src=\"https://picsum.photos/700/450\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 col-lg-6 text-left\">\r\n              <IndexMap mapvh=\"45vh\" />\r\n            </div>\r\n            <div className=\"col-md-12 col-lg-6 text-right\">\r\n              <h1>About Us</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as auth from \"../services/authService\";\r\nimport { setCurrentUser } from \"../store/Hospitals\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    auth.logout();\r\n    dispatch(setCurrentUser(false));\r\n    window.location = \"/\";\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  const user = useSelector((state) => state.hospital.currentUser);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!user) return <Redirect to=\"/login\" />;\r\n        return Component ? <Component /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <p>Error 404</p>\r\n      <p>Page Not Found</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport Home from \"./screens/HomeScreen\";\r\nimport ActiveRides from \"./screens/ActiveRidesScreen\";\r\nimport Profile from \"./screens/ProfileScreen\";\r\nimport Footer from \"./components/footerComponent\";\r\nimport Login from \"./screens/LoginScreen\";\r\nimport Register from \"./screens/RegisterScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoggedByJWT } from \"./store/Hospitals\";\r\nimport Logout from \"./components/logout\";\r\nimport ProtectedRoute from \"./components/protectedRoute\";\r\nimport NotFound from \"./screens/NotFound\";\r\nimport auth from \"./services/authService\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const user = auth.getCurrentUser();\r\n    if (user) {\r\n      dispatch(getLoggedByJWT(user));\r\n    }\r\n  }, []);\r\n  const user = useSelector((state) => state.hospital.currentUser);\r\n  return (\r\n    <>\r\n      <main className=\"screen\">\r\n        <Switch>\r\n          <ProtectedRoute path=\"/home\" component={Home} />\r\n          <ProtectedRoute path=\"/activeRides\" component={ActiveRides} />\r\n          <ProtectedRoute path=\"/profile\" component={Profile} />\r\n          <Route\r\n            path=\"/login\"\r\n            render={() => {\r\n              if (user) return <Home />;\r\n              return <Login />;\r\n            }}\r\n          />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route\r\n            path=\"/register\"\r\n            render={() => {\r\n              if (user) return <Home />;\r\n              return <Register />;\r\n            }}\r\n          />\r\n          <Route path=\"/notfound\" component={NotFound} />\r\n          <Redirect from=\"/\" exact to=\"/home\" />\r\n          <Redirect to=\"/notfound\" />\r\n        </Switch>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ConfigureStore } from \"./store/configureStore\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = ConfigureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\n\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport HospitalReducer from \"./Hospitals\";\r\nimport DriverReducer from \"./Drivers\";\r\nimport ActiveRidesReducer from \"./ActiveRides\";\r\nimport PastRidesReducer from \"./PastRides\";\r\nimport PatientReducer from \"./Patient\";\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      patient: PatientReducer,\r\n      hospital: HospitalReducer,\r\n      drivers: DriverReducer,\r\n      activeRides: ActiveRidesReducer,\r\n      pastRides: PastRidesReducer,\r\n    }),\r\n    applyMiddleware(thunk)\r\n  );\r\n  return store;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/usermarkersvg.ec707128.svg\";","module.exports = __webpack_public_path__ + \"static/media/Profile.3d9a511a.png\";","module.exports = __webpack_public_path__ + \"static/media/ambulancessvg.bb0f91aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospitalmarkersvg.433034ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/hospitalpic.8db1adf3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-brands.ca5aa324.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-brands.6211187c.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram-square-brands.6173135a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-square-brands.db3d8ae2.svg\";"],"sourceRoot":""}